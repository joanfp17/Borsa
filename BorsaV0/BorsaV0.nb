(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    203022,       4355]
NotebookOptionsPosition[    200287,       4257]
NotebookOutlinePosition[    200790,       4278]
CellTagsIndexPosition[    200702,       4273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "31"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.49`", ",", "9.51`", ",", "9.28`", ",", "9.29`", ",", 
         "8.11727`*^6"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "30"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.49`", ",", "9.61`", ",", "9.45`", ",", "9.52`", ",", 
         "2.7366988`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "29"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.4`", ",", "9.5`", ",", "9.32`", ",", "9.41`", ",", 
         "1.8393449`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "28"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.48`", ",", "9.51`", ",", "9.3`", ",", "9.38`", ",", 
         "1.5248228`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.41`", ",", "9.52`", ",", "9.4`", ",", "9.45`", ",", 
         "2.4961717`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.18`", ",", "9.44`", ",", "9.13`", ",", "9.42`", ",", 
         "3.2944941`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "23"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.1`", ",", "9.25`", ",", "9.08`", ",", "9.2`", ",", 
         "2.2092388`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "22"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "8.99`", ",", "9.2`", ",", "8.94`", ",", "9.14`", ",", 
         "4.6347911`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "21"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "8.95`", ",", "8.98`", ",", "8.86`", ",", "8.92`", ",", 
         "1.3881668`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "8.94`", ",", "8.99`", ",", "8.88`", ",", "8.97`", ",", 
         "2.2966311`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.11`", ",", "9.13`", ",", "8.96`", ",", "9.`", ",", 
         "2.0671918`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.20`", ",", "9.19`", ",", "8.97`", ",", "9.14`", ",", 
         "1.8464967`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.08`", ",", "9.15`", ",", "8.91`", ",", "8.99`", ",", 
         "2.2118944`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.1`", ",", "9.17`", ",", "8.97`", ",", "9.11`", ",", 
         "1.9952031`*^7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2014", ",", "7", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "9.12`", ",", "9.2`", ",", "8.98`", ",", "9.04`", ",", 
         "2.4544179`*^7"}], "}"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6163308723604794`*^9, 3.6163309024529324`*^9}, {
   3.618836249999405*^9, 3.618836259671422*^9}, 3.618846667504903*^9, 
   3.6189023149826784`*^9, 3.61891748280529*^9, 3.618932955297629*^9, 
   3.6795828542687063`*^9, {3.679583767829462*^9, 3.6795837680141582`*^9}, 
   3.679751119837271*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.679753691295265*^9, 3.679753695746719*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.6797536964701824`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", " ", "Borsa`*"}]], "Input",
 CellChangeTimes->{{3.679751137038932*^9, 3.679751148230519*^9}}],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["Borsa`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["Borsa`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["depureData",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"depureData", "Borsa`"}},
          ButtonNote->"Borsa`"], 
         ButtonBox["kNNForecast",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"kNNForecast", "Borsa`"}},
          ButtonNote->"Borsa`"], 
         ButtonBox["SignalTradingChart",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info43697201448-8430485", {"SignalTradingChart", "Borsa`"}},
          ButtonNote->"Borsa`"]},
        {
         ButtonBox["IDateListPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"IDateListPlot", "Borsa`"}},
          ButtonNote->"Borsa`"], 
         ButtonBox["MPForecast",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"MPForecast", "Borsa`"}},
          ButtonNote->"Borsa`"], 
         ButtonBox["smoothDCT",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"smoothDCT", "Borsa`"}},
          ButtonNote->"Borsa`"]},
        {
         ButtonBox["ISTradingChart",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info43697201448-8430485", {"ISTradingChart", "Borsa`"}},
          ButtonNote->"Borsa`"], 
         ButtonBox["MPPredictions",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"MPPredictions", "Borsa`"}},
          ButtonNote->"Borsa`"], 
         ButtonBox["smoothDCT1",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info43697201448-8430485", {"smoothDCT1", "Borsa`"}},
          ButtonNote->"Borsa`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.697197848686695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Stock`*"}]], "Input",
 CellChangeTimes->{{3.6797514845604553`*^9, 3.679751500109935*^9}, {
  3.697197893457695*^9, 3.697197901353695*^9}}],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["Stock`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["Stock`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["actualizeStocks",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info53697201502-8430485", {"actualizeStocks", "Stock`"}},
          ButtonNote->"Stock`"], 
         ButtonBox["connectDB",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info53697201502-8430485", {"connectDB", "Stock`"}},
          ButtonNote->"Stock`"], 
         ButtonBox["disConnectDB",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info53697201502-8430485", {"disConnectDB", "Stock`"}},
          ButtonNote->"Stock`"], 
         ButtonBox["Stock",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info53697201502-8430485", {"Stock", "Stock`"}},
          ButtonNote->"Stock`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.6971979025036945`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Stock"}]], "Input",
 CellChangeTimes->{{3.6971979063716946`*^9, 3.6971979220406947`*^9}}],

Cell[BoxData[
 StyleBox["\<\"Stock[s_String] obtains an Stock object, \
Stock[s,OHLCV,Adj,Dividends,Splits], with the financial information from \
2007-1-1 to today of ticker s in yahoo.\\n\\tStock[s_String, from_List] \
obtains an Stock object with the financial information from {year,month,day} \
to today of ticker s in yahoo.\\n\\tStock[s_String, from_List, to_List] \
obtains an Stock object with the financial information from {year,month,day} \
to {year,month,day} of ticker s in yahoo.\\n\\tStock[][Properties]\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6971979245006948`*^9},
 CellTags->"Info63697201524-8430485"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"connectDB", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6971981031926947`*^9, 3.6971981153716946`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"quantmod\"\>", ",", "\<\"TTR\"\>", ",", "\<\"xts\"\>", 
   ",", "\<\"zoo\"\>", ",", "\<\"Defaults\"\>", ",", "\<\"stats\"\>", 
   ",", "\<\"graphics\"\>", ",", "\<\"grDevices\"\>", ",", "\<\"utils\"\>", 
   ",", "\<\"datasets\"\>", ",", "\<\"methods\"\>", ",", "\<\"base\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6971986422396946`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"san", "=", 
  RowBox[{"Stock", "[", 
   RowBox[{"\"\<SAN.MC\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"2000", ",", "1", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6971979501916947`*^9, 3.697197960999695*^9}, {
   3.6971980442466946`*^9, 3.697198044493695*^9}, {3.697198125580695*^9, 
   3.6971981381476946`*^9}, 3.697198537881695*^9, {3.697198669853695*^9, 
   3.6971986713496947`*^9}, {3.6971989499426947`*^9, 3.697198969325695*^9}}],

Cell[BoxData[
 TemplateBox[{PanelBox[
    TagBox[
     GridBox[{{"\"SAN.MC\""}, {
        TemplateBox[{"\"from  \"", 
          TemplateBox[{
            RowBox[{"\"Mon 3 Jan 2000\""}], 
            RowBox[{"DateObject", "[", 
              RowBox[{"{", 
                RowBox[{"2000", ",", "1", ",", "3"}], "}"}], "]"}]}, 
           "DateObject", Editable -> False], "\"  to  \"", 
          TemplateBox[{
            RowBox[{"\"Fri 24 Feb 2017\""}], 
            RowBox[{"DateObject", "[", 
              RowBox[{"{", 
                RowBox[{"2017", ",", "2", ",", "24"}], "}"}], "]"}]}, 
           "DateObject", Editable -> False]}, "RowDefault"]}, {
        RowBox[{"4466", " ", "\" bars\""}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   StyleBox["\"Stock Object\"", 16, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "PanelLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", #2, "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
       RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6971979641726947`*^9, 3.697198045936695*^9, {3.697198649497695*^9, 
   3.697198673214695*^9}, {3.6971989630506945`*^9, 3.697198971785695*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"san", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6971986826456947`*^9, 3.697198692276695*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Name\"\>", ",", "\<\"Date\"\>", ",", "\<\"Open\"\>", 
   ",", "\<\"Close\"\>", ",", "\<\"High\"\>", ",", "\<\"Low\"\>", 
   ",", "\<\"Volume\"\>", ",", "\<\"OHLCV\"\>", ",", "\<\"Median Price\"\>", 
   ",", "\<\"Intraday Range\"\>", ",", "\<\"Interday Range\"\>", 
   ",", "\<\"Dividends\"\>", ",", "\<\"Splits\"\>", ",", "\<\"Adjusted\"\>", 
   ",", "\<\"Weekly Prices\"\>", ",", "\<\"Monthly Prices\"\>", 
   ",", "\<\"Actualize\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6971986961716948`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TradingChart", "[", 
  RowBox[{"san", "[", "\"\<Quarterly Prices\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6971988397136946`*^9, 3.697198868360695*^9}, {
  3.697199048715695*^9, 3.6971990509876947`*^9}}],

Cell[BoxData[
 GraphicsBox[
  DynamicModuleBox[{System`TradingChartDump`$timestampdepth$11297 = "Full", 
   System`TradingChartDump`$highlightposition$11297 = Automatic, 
   System`TradingChartDump`$maxohlc$11297 = 15.69`4., 
   System`TradingChartDump`$timestampstyle$11297 = Directive[
    GrayLevel[0.75], 
    Opacity[0.25]], System`TradingChartDump`$dates$11297 = CompressedData["
1:eJxNkz1OZEEMhCcg4hZ7A/+V3T4AARIRRyBYaaMNhvsLM/C6OhlNSXbp1efq
Px//3/++3G63+9P8vP27f74+zx9XYEWGyK9ML1lry1KUGmWHe265ynrUJRs6
Zpc0cTHZVqbj60b5oy5pmd+zl/SIElqFhTZ3IZ7HMJZGUI6TMJGVN8DdpS3H
8OrKY3iUMb4LULXzuno2P2MyTMKgbM3grpctOntA43CGixLsMF1FsJPuoS5Z
iSZYXxFJsN42vLbVjOlCUi712Luh6M69G+YLTBRz0uMK4V04hqMwwLYEhix3
0/24Qkxt+hiulmT8WNnO+NEPNJec806IHQEqKQQLncLW3oUlFp0xHwE6YxIq
wQKiRbDTfXGCxTfmw7kGPMFOy9IIFqtRBItBdVwhBXZUJXVeFhOlqSrrndZy
XCHn/E6wOdduljAn8PFgp+w4rpC5AsfwT4AtpzlxfMY05/EWvgB9hqS5
   "], System`TradingChartDump`$visdates$11297 = {
   1 -> "Mon. Jan 03, 2000", 2 -> "Mon. Apr 03, 2000", 3 -> 
    "Mon. Jul 03, 2000", 4 -> "Mon. Oct 02, 2000", 5 -> "Mon. Jan 01, 2001", 
    6 -> "Mon. Apr 02, 2001", 7 -> "Mon. Jul 02, 2001", 8 -> 
    "Mon. Oct 01, 2001", 9 -> "Tue. Jan 01, 2002", 10 -> "Mon. Apr 01, 2002", 
    11 -> "Mon. Jul 01, 2002", 12 -> "Tue. Oct 01, 2002", 13 -> 
    "Wed. Jan 01, 2003", 14 -> "Tue. Apr 01, 2003", 15 -> "Tue. Jul 01, 2003",
     16 -> "Wed. Oct 01, 2003", 17 -> "Thu. Jan 01, 2004", 18 -> 
    "Thu. Apr 01, 2004", 19 -> "Thu. Jul 01, 2004", 20 -> "Fri. Oct 01, 2004",
     21 -> "Mon. Jan 03, 2005", 22 -> "Fri. Apr 01, 2005", 23 -> 
    "Fri. Jul 01, 2005", 24 -> "Mon. Oct 03, 2005", 25 -> "Mon. Jan 02, 2006",
     26 -> "Mon. Apr 03, 2006", 27 -> "Mon. Jul 03, 2006", 28 -> 
    "Mon. Oct 02, 2006", 29 -> "Mon. Jan 01, 2007", 30 -> "Mon. Apr 02, 2007",
     31 -> "Mon. Jul 02, 2007", 32 -> "Mon. Oct 01, 2007", 33 -> 
    "Tue. Jan 01, 2008", 34 -> "Tue. Apr 01, 2008", 35 -> "Tue. Jul 01, 2008",
     36 -> "Wed. Oct 01, 2008", 37 -> "Thu. Jan 01, 2009", 38 -> 
    "Wed. Apr 01, 2009", 39 -> "Wed. Jul 01, 2009", 40 -> "Thu. Oct 01, 2009",
     41 -> "Fri. Jan 01, 2010", 42 -> "Thu. Apr 01, 2010", 43 -> 
    "Thu. Jul 01, 2010", 44 -> "Fri. Oct 01, 2010", 45 -> "Mon. Jan 03, 2011",
     46 -> "Fri. Apr 01, 2011", 47 -> "Fri. Jul 01, 2011", 48 -> 
    "Mon. Oct 03, 2011", 49 -> "Mon. Jan 02, 2012", 50 -> "Mon. Apr 02, 2012",
     51 -> "Mon. Jul 02, 2012", 52 -> "Mon. Oct 01, 2012", 53 -> 
    "Tue. Jan 01, 2013", 54 -> "Mon. Apr 01, 2013", 55 -> "Mon. Jul 01, 2013",
     56 -> "Tue. Oct 01, 2013", 57 -> "Wed. Jan 01, 2014", 58 -> 
    "Tue. Apr 01, 2014", 59 -> "Tue. Jul 01, 2014", 60 -> "Wed. Oct 01, 2014",
     61 -> "Thu. Jan 01, 2015", 62 -> "Wed. Apr 01, 2015", 63 -> 
    "Wed. Jul 01, 2015", 64 -> "Thu. Oct 01, 2015", 65 -> "Fri. Jan 01, 2016",
     66 -> "Fri. Apr 01, 2016", 67 -> "Fri. Jul 01, 2016", 68 -> 
    "Mon. Oct 03, 2016", 69 -> "Mon. Jan 02, 2017"}, 
   System`TradingChartDump`$subplotrect$11297, 
   System`TradingChartDump`$subplotpoint$11297, 
   System`TradingChartDump`$ndigits$11297 = 4, 
   System`TradingChartDump`$highlightstyle$11297 = Directive[
    PointSize[0.01], 
    GrayLevel[0]], System`TradingChartDump`$bouncingballstyle$11297 = 
   Directive[
    PointSize[0.01], 
    GrayLevel[0]], System`TradingChartDump`$bouncingballQ$11297 = True, 
   System`TradingChartDump`$timestampQ$11297 = True, 
   System`TradingChartDump`$data$11297 = {{
    3155846400, {11.84849, 12.36361, 10.14845, 11.57021, 8.909708*^8}}, {
    3163708800, {11.57021, 12.04422, 10.30299, 11.38483, 5.991039*^8}}, {
    3171571200, {11.29204, 13.07447, 11.18899, 12.81691, 7.516551*^8}}, {
    3179433600, {12.67264, 12.91995, 10.11754, 11.74544, 9.875605*^8}}, {
    3187296000, {11.74544, 12.83752, 9.60239, 10.66362, 1.0947061*^9}}, {
    3195158400, {10.76666, 11.76605, 9.74663, 11.02422, 9.838207*^8}}, {
    3203020800, {11.04483, 11.53935, 6.92361, 8.6236, 1.4207552*^9}}, {
    3210883200, {8.72664, 10.7357, 7.99512, 9.69511, 1.7578336*^9}}, {
    3218832000, {9.69511, 10.25147, 8.77815, 9.80845, 1.987026*^9}}, {
    3226608000, {9.80845, 10.78727, 7.5727, 8.2836, 2.0721588*^9}}, {
    3234470400, {8.21148, 9.03572, 5.05877, 5.32665, 2.7348242*^9}}, {
    3242419200, {5.36786, 7.70664, 4.88362, 6.73816, 2.7887822*^9}}, {
    3250368000, {6.73816, 7.39755, 5.15149, 6.02725, 2.859055*^9}}, {
    3258144000, {6.08906, 8.34542, 6.05816, 7.86118, 2.8304065*^9}}, {
    3266006400, {7.96421, 8.41754, 7.36664, 7.50058, 2.8351816*^9}}, {
    3273955200, {7.5727, 9.72603, 7.49028, 9.67451, 3.0117562*^9}}, {
    3281904000, {9.67451, 10.06602, 8.6133, 9.11815, 3.2381877*^9}}, {
    3289766400, {9.17997, 9.85996, 8.41754, 8.78845, 3.1135229*^9}}, {
    3297628800, {8.87088, 8.9636, 7.9333, 8.09815, 2.7955569*^9}}, {
    3305577600, {8.06724, 9.55088, 8.06724, 9.40663, 3.937731*^9}}, {
    3313699200, {9.40663, 10.12784, 9.21088, 9.67451, 4.4124311*^9}}, {
    3321302400, {9.6539, 9.94239, 9.19027, 9.88057, 3.7110348*^9}}, {
    3329164800, {9.89088, 11.323, 9.48905, 11.26118, 4.3068659*^9}}, {
    3337286400, {11.29204, 11.51874, 10.56057, 11.48788, 4.0258382*^9}}, {
    3345148800, {11.48788, 12.78605, 11.2096, 12.41508, 4.4756709*^9}}, {
    3353011200, {12.50787, 12.66239, 10.75631, 11.76605, 3.7037432*^9}}, {
    3360873600, {11.75569, 12.89934, 11.25082, 12.84787, 3.8450998*^9}}, {
    3368736000, {12.85812, 14.86726, 12.71386, 14.56848, 4.1146113*^9}}, {
    3376598400, {14.56848, 15.1969, 13.19812, 13.76482, 5.2012911*^9}}, {
    3384460800, {13.75447, 14.89812, 13.2702, 14.10482, 5.4864041*^9}}, {
    3392323200, {14.08421, 14.82604, 12.74483, 14.04299, 5.2588405*^9}}, {
    3400185600, {13.91934, 15.69141, 13.81629, 15.23812, 5.8664937*^9}}, {
    3408134400, {15.23812, 15.23812, 10.81813, 13.00239, 5.5842568*^9}}, {
    3415996800, {12.98178, 14.86726, 11.79691, 12.02361, 3.4670798*^9}}, {
    3423859200, {11.97204, 12.98178, 10.07633, 10.81813, 3.9236252*^9}}, {
    3431808000, {11.10666, 12.06483, 5.04847, 6.83089, 5.6269605*^9}}, {
    3439756800, {6.95452, 7.54179, 4.03878, 5.34725, 5.4792568*^9}}, {
    3447532800, {5.25453, 8.94299, 5.14119, 8.81936, 5.2571568*^9}}, {
    3455395200, {8.89148, 11.62178, 8.2424, 11.33326, 3.4930368*^9}}, {
    3463344000, {11.38483, 12.32752, 10.66874, 11.89996, 3.094253*^9}}, {
    3471292800, {11.89996, 12.50264, 8.95845, 10.13815, 4.206272*^9}}, {
    3479068800, {10.13815, 11.20448, 7.43361, 9.00482, 8.4180579*^9}}, {
    3486931200, {9.00482, 10.84387, 8.60815, 9.59929, 6.901744*^9}}, {
    3494880000, {9.59929, 10.11239, 7.32542, 8.16821, 5.7425441*^9}}, {
    3503001600, {8.2393, 9.6704, 7.58815, 8.44022, 5.288806*^9}}, {
    3510604800, {8.56591, 8.97906, 7.65513, 8.20428, 6.982103*^9}}, {
    3518467200, {8.19295, 8.47422, 5.30811, 6.41259, 8.5738815*^9}}, {
    3526588800, {6.21271, 6.73816, 5.22877, 6.04786, 5.1016229*^9}}, {
    3534451200, {6.02726, 6.84943, 5.55023, 5.94483, 5.7173419*^9}}, {
    3542313600, {5.97368, 5.98604, 4.29738, 5.3792, 7.6769025*^9}}, {
    3550176000, {5.35756, 6.5218, 4.09647, 5.97059, 7.068456*^9}}, {
    3558038400, {6.01283, 6.32501, 5.52241, 6.28483, 6.9431498*^9}}, {
    3565987200, {6.28483, 6.88034, 5.27205, 5.40083, 4.8749089*^9}}, {
    3573763200, {5.40083, 5.84077, 4.93617, 5.05053, 5.5965223*^9}}, {
    3581625600, {5.12059, 6.093, 4.81, 6.028, 5.3282868*^9}}, {
    3589574400, {6.024, 6.777, 6.019, 6.506, 6.0693242*^9}}, {
    3597523200, {6.506, 6.99, 6.201, 6.921, 4.1782201*^9}}, {
    3605299200, {6.955, 7.926, 6.806, 7.63, 4.2347928*^9}}, {
    3613161600, {7.661, 7.96, 7.05, 7.611, 4.1127376*^9}}, {
    3621110400, {7.58, 7.675, 6.45, 6.996, 7.1960286*^9}}, {
    3629059200, {6.996, 7.116, 5.772, 7.017, 6.8762781*^9}}, {
    3636835200, {6.977, 7.169, 6.15, 6.264, 4.8675469*^9}}, {
    3644697600, {6.324, 6.794, 4.551, 4.744, 7.215356*^9}}, {
    3652646400, {4.817, 5.4, 4.445, 4.558, 6.5237028*^9}}, {
    3660595200, {4.558, 4.569, 3.31, 3.874, 8.5033017*^9}}, {
    3668457600, {3.821, 4.685, 3.15, 3.429, 7.7586527*^9}}, {
    3676320000, {3.499, 4.279, 3.27, 3.947, 5.1564185*^9}}, {
    3684441600, {3.96, 5.049, 3.89, 4.959, 4.4638993*^9}}, {
    3692304000, {4.921, 5.49, 4.919, 5.049, 4.042923*^9}}}, 
   System`TradingChartDump`$markerstyle$11297 = {
    RGBColor[0.368417, 0.506779, 0.709798], 
    RGBColor[0.880722, 0.611041, 0.142051], 
    RGBColor[0.560181, 0.691569, 0.194885], 
    RGBColor[0.922526, 0.385626, 0.209179], 
    RGBColor[0.528488, 0.470624, 0.701351], 
    RGBColor[0.772079, 0.431554, 0.102387], 
    RGBColor[0.363898, 0.618501, 0.782349], 
    RGBColor[1, 0.75, 0], 
    RGBColor[0.647624, 0.37816, 0.614037], 
    RGBColor[0.571589, 0.586483, 0.], 
    RGBColor[0.915, 0.3325, 0.2125], 
    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
    RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
   System`TradingChartDump`$controlmin$11297 = 0.5, 
   System`TradingChartDump`$controlmax$11297 = 69.5, 
   System`TradingChartDump`$datescope$11297 = {{"`", "YearShort"}}, 
   System`TradingChartDump`$aspectratio$11297 = GoldenRatio^(-1), 
   System`TradingChartDump`$min$11297, System`TradingChartDump`$max$11297, 
   System`TradingChartDump`$ohlclabel$11297 = Grid[{{
      Style["O: ", 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times", 
       LineBreakWithin -> False], 
      Style[
       Dynamic[
        ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
         Dispatch[System`TradingChartDump`$opens$11297]]], 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times"], 
      Style["H: ", 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times", 
       LineBreakWithin -> False], 
      Style[
       Dynamic[
        ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
         Dispatch[System`TradingChartDump`$highs$11297]]], 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times"], 
      Style["L: ", 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times", 
       LineBreakWithin -> False], 
      Style[
       Dynamic[
        ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
         Dispatch[System`TradingChartDump`$lows$11297]]], 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times"], 
      Style["C: ", 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times", 
       LineBreakWithin -> False], 
      Style[
       Dynamic[
        ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
         Dispatch[System`TradingChartDump`$closes$11297]]], 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times"], 
      Style[
       Dynamic[
        ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
         Dispatch[System`TradingChartDump`$visdates$11297]]], 12, 
       Directive[
        GrayLevel[0.4], FontFamily -> "Arial"], FontFamily -> "Times", 
       LineBreakWithin -> False]}}, ItemSize -> Automatic, 
    Spacings -> {{0, 0, 1, 0, 1, 0, 1, 0, 1, 0}, 0}, Frame -> False], 
   System`TradingChartDump`$ohlcpoint$11297 = {}, 
   System`TradingChartDump`$subpricegridlines$11297 = Automatic, 
   System`TradingChartDump`$overlaypoint$11297, 
   System`TradingChartDump`$overlayvalue$11297, 
   System`TradingChartDump`$subplotvalue$11297, 
   System`TradingChartDump`$opts$11297 = {
   AspectRatio -> GoldenRatio^(-1), Axes -> Automatic, 
    AxesLabel -> {None, None}, Frame -> True, FrameLabel -> {None, None}, 
    GridLines -> Automatic, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], LabelStyle -> {
      GrayLevel[0.4], FontFamily -> "Arial"}}, 
   System`TradingChartDump`$candlestickchart$11297 = {{{}, {
     Antialiasing -> Automatic, {
       Directive[
        AbsoluteThickness[1], 
        EdgeForm[None], 
        RGBColor[0.5, 0.7, 0]], {{Antialiasing -> False, 
         Directive[
          AbsoluteThickness[1], 
          EdgeForm[None]], 
         Line[CompressedData["
1:eJx103lMFHcUB3AKRHHB5V6WZWUv9uBWBFbL0R+sUkBAl6YgCEG22IJcahEQ
VLYoR+UQRY1NaxEoqOAiAQXlCl2OglBWhIBSaTlakVpJgXBU2qYszLyJJJ1k
/vjk++b9fr83MyxJvP8RNRUVFbR6q2L3+qWBOi/QfNoO8xDuyA/892ReJbyg
kzfD5FmA/87V3OxeYo6Zih7HFHh5nOWA03yHbmdlc8Hf7Cy5L8zmg5P7Aws+
1cL7M9GT8JYmlRUG2G8mSUBKYIG//rioUpbMBbe6vn/yt0/w9djocZu7LCqf
Bd6Y33muJmuVmoHVp3IFb27guQDVh0ZWDWTrgx9uqvOuTjYEZ9vcjv9qwBSc
9UJLODZPw2yFFM1Z+/KdqOA/MmNz7A4R7mx/OTlSzQTnjKVZPj+On3c70sse
XtBc3AYWyaJ+Pu5tCo4eFNk3fM4Bh5e/CQsKwm2PxEvvecaymf/r0yTprBaN
qKdz7/XteMLG7ID65N8mLkcT3ph3uFxzTXAzA7+7viMa7+/UjQ5ngxMeGK70
+BF5Od9qVjpBOFZmqzcixy1ED4TL8oi3bLCFf3gMq4vIfYRfuh0u44H1mnMl
jzJw70LdznOb1Rhc8Lvf7y6k6Ub2vr6FD65r8Yzs+QvPd6Pa1LnqA9GEN+bl
JA/uycvm4MwTJaEZgwLMTigvtCQlWsoDGw3W906n88Gc5V+8E3vNwWPn3dXp
NbidUfCzAXJaLGFPyvYvDtUT3uxeI93SZA3e+UKq0ObgdkV8eeatwAsWYPHN
/b96pVuCQ9uTJEM9RP3izMWlCgcrzAjlrP7+fxZbgq0V5xprhwg7uA2eUZHY
gjW1gkZ/P2WDWYQ6Ken0KwUGYN/P+OdK1Q3BK68GryomWGDKWgFmqQj1GYtH
TE4zwWn6JN1jXUTOuNEwF+TKB7uzVMnFFfi896BnW3+iHAnggpWPa3QQecTl
S7XVtwTgK0eL8n/oxfvtRfOMp/FhQha4rTGkPUmVDa7kZTdoV3PB8tI8zpAd
9n1KPVD/pZB/RcGm4OujhVkZKUywTopjpWsgUU8zIp+PGMdzL2RvQ9foluiA
g+KiHMziDMG6js7N/hQaOM5n/8GJcSPsPN5oOOq7sjkKBZxU/MiPs5UKnj4z
Ga3wMQZ/L2s8VcHBLN2HXEjDpcdc9MEaL1/NpqYagO/SgyOcwqjgad4Ojbt0
vL8Penv2aFOCPuG0VRZSCSuWPposMzEB36TZjpptws/jg6ZW7sw+/ZEK3pgv
CkIuyhdMwN2JLUW0e3g/XzTgK9E5uJuw/0PTjNf9hP2U8X0GOOO1eLUCf19+
yFtL1TKLYgS+JsqJmVoxASuf7kqkgzuY1ScidTG3HkDmyu0JSOCe4r118/9o
gtUDyNY123TBa/Mq1Mb2I0aMtQ0RrvpwPMWgirCxsoGdAVg5XfUh7H0hMVpV
AFlGeH0+hNfnZwjG+/0HyEnykA==
          "]]}, 
        Polygon[CompressedData["
1:eJxl0mtIk1EYwHGzZaKmqHOb02yX3GbTvOS0tMvDpqWmtg1pDa3IblpqKZo3
aN2m0dQCLfoSOYUS80aRF7QoS7KMSrCNQkOl0rKCEJKyIG3nPeN0PpwPv3P+
8PA+vMLMY9qDSx0cHAQLh7VwHBeOXtNXUZC/DLK2aOMqLkvgZpuqtLrGhfLv
KtflyoYgYHrGLbI9qp5uDhhSLE2V5wMhzWru27rNl3LJsO7SITcJ7kkHQOq3
YplLoRCaZ9R7GhsFlB9sjin6sF+Me8Y72e3mjAwhtq0XUWZNVcm+XrP3pKXQ
7dSZ1FHig3oZ5cpRt+jxWT7uScvhS0WuKSKdh/pgyqZxg/xN/irckw4FVWv2
u/ykAHhdJGsf1oRR3nfj6169Xox7xvILVvXatnWgmVuSkCsSoD6Ssn9g+4vw
VyLck7a/23oFZXJe5H9WQOFdn/mhVDHqoyjntoZ6ve2396SjYI12X45wkOmj
KXvdq8rsMUpwTzoa/6+2fj3lzvsJWUM/7T1p+7ut30C5oqBht3FEhnvSMcAd
6Xr+6YwU9bGUx88pWf63g3BPOhYSOGGn07uCUL+R8rrRUy89xCG4J70JNPU7
3ieekaN+M+Uf3y7ONSuCcU96C4S8PNt7xyKHzzF11mkZUHZ10499Ll2Le8ac
gaMyrlUJKYelZxtZPqhXUeb8uxDinrBOBQZvF8/jg0Jb30RbKXR0NzdLcE/Y
qoLF3HlAgubFUa47cr3myXMp7gnr4uFRb8bjYkcRmke7v7FabIkQ4570Vrg6
VltpLBOgnjaf637uwIQA96QTQZ+XrVidh/bVRDsveceuyQku7glbE6HY3JMq
XsFD35tE+WFrb2mz2Bf3hHXbwfnj9PfycjaaR/uTJNy5xZ+He8LW7WA40ldY
y2PmJVOu54eOrXbi456wzv5um0f76Yn71/ntfrgnbE0GbXeAcWbYD81LoWyc
0SzcBOCesC4VrqhMOVPzqG+iPSDoKMjy9Mc9Y9Okos50Sw1D5vjO2T+uULTy
2dHCEdq/Ti4uxAP3hGfU0LZtoozd5mHr2RrKi9tkWbxxT1iuQfvwtvVptH1Z
O91DIti4Z/wXIVFd4A==
         "]]}}, {
       Directive[
        AbsoluteThickness[1], 
        EdgeForm[None], 
        RGBColor[0.7, 0.1, 0]], {{Antialiasing -> False, 
         Directive[
          AbsoluteThickness[1], 
          EdgeForm[None]], 
         Line[CompressedData["
1:eJxt1HlQU0ccB/AQ03JWOXKACSEhiQQwkRAKA0hZgoaIck+RUBQPorRylioe
jQaEqoN2vDhULEoseHBowIJFMwVBWkGFKS1SBIoWFToWQUARjwK+98vEdmfe
H5/Z3/vub/fNW/a65HDFHAKBEDj9ELHn3XjqqxEmqQ1WcBHu4OoLB0c5DmD/
tySa8498cNhzA1miBp8noCrD6Az2CS7YysQixahpATjz7BThDJUP1s83R7kj
w2LhYi64UnIz5LxSN28+WFM5p9MRvGuCszQuCjcZvegL3JLgxgFvGnEk3Ijg
gQeVDzbdKdPV6+czUKNRf/uNS3Sw1+GWXTJfNnhS9LCCR9bVKxoWjT+j4vvj
Iv/yz3tTA5ng/YFDJLdDLHDCJxUfUY7wwKRH+/lPTuL9LsD2TwbbjSVEKoMp
4LBTIX8ts7QHc7IC6AEJeL4T4lXeFrFOkMF5/jkJj+jWYIXN/Shavi14zz0z
jz+fzccsRAuLBralpNuCU1lc0wICE7woZ9+t5t9Y4LxH9T3ybjvMImQq5W0m
erHBW025/J2L7cE514/F3mJzwWtLnsTK5fj+Xd/Ld0WT86Y/+BE2eNfVleUr
anX1mmyWIS8GzxejVYlNbzR1duAkN1UNcmWBH3eVvYx5wgazdlybenANtxfa
K003997NAxeKi6s99jqAaQr3n7kRjmBXn7X7DEm4fdDEKotXyQonsKy04uu8
Pc5gF6dzVm1xQrD4nurOPI4Asy9q5ed9Fq10BAsZRr8QqQvBgjXEmn9KdPXG
b2oO2zpj8yqEGn5KG+4v5oGbymj+ngZOYFMzec/QNuH/m+CHRi9vzCMVOIBz
aziFVDM+2FCiURlfFYDv1vn2XpjA+lX5oWXxLVfIDlywfj//rW+8TfaqHMHX
kyB3uZpZLCKD3ZYTOzrC6eCUY78qRGw+WDDToDv2/6kk6OSYduSygzm4h/th
Ru56CthYnPj2phMT/Dqz52JiO5avWoLaquTjV4bY4Mz7zQV1Ui74bPj0DWfg
CD76RdG3za14/0vR7b4sCemqLfh6XUxjOtEeLI31O34pfgFYL58gRend2Q+9
gmzBG2sNiuwiWWBlS6Ewx1NX36A+wPndFf8fAtDB3ZYb/viOCXb6avX6/HgW
WHtGFB0wzgYnjxeOadn4fgOQn4zqkuFNAW845fpGWWID7vPQTrSOssAN35Su
vLkOz5chf8/2CskQGZzC83YniqzB+veNDA2ztpS0dWHzKhmqZ/jsTBZTwXHM
yd0ZzTSw5fOol20KOlgzdtp0CO63ZYjxdHJtlosFWH3YyyAoiwJ+7SLZWj1C
A2utqlabDeD5gehuRpr0KJUCbv9gXJB2XOcVqZ92pWfTwfXlddvOc7DzISxH
3q8+lqu1VmBq74C9VkwGD3bk3hmNoYH184OQeHYwwNO399S5VCa4U53iY9Jp
B9YWzV/Ucwb/3sHoVuvMsAHP3v9TdPBsfJWuPryWmf13GO4QdPzYzLAGbz5i
TYqcawOeZTkDXNjIuvjlY/w8QlDwOvMoTzdL8JqBNvvuSZ1n3xfo6jUnh0tv
LMfzQ5Gsfzu5otkCbFTGiI7ztgS/648CfhHx4PsTS7DzRqFoB7kioH+7Cbjl
9NIfnr2eCxbMLCi1BOvlq0Kx8zcGe/eFHMhPMgVPH7465Zquvml6+/GH5qJ/
AbWySyM=
          "]]}, 
        Polygon[CompressedData["
1:eJxl1H9ME2cYwPHSdZOtiFGgQCvl2mvpFQRHYRqLjgewtJNAAQ23LoxNxM0M
/IHKJtmYP6ayiRhFRLNhGLCBQ6TKzGBByWRUMlw2Sdxui9ZtmAaHMQQBN0Y0
6+x7b/Pu/eP945P75p73veReTfHW/I1PSSQSvXfJvEvqXcWWSeWwy5Oa91eA
bXO3AeyvVj9QRs1Qzrl49ugD1gBiL/pCy675ntF/sNu7Miprj0jh/w55buG2
QFcM7kU78i4d3F4+H3Y/ZC0lLxthndB8KdO6kLIzfdjeUWXAvehOrijj695F
2L4+jHLppFFyda0e96SVsHFg6cyUIgb1UZTNddd221I1uBddEOpsLixkQTZ2
mLt/moWOe7lFra06yofXjMuSjzG4J60Hdr9VZS1jUB9DOXq6rKAqJwz3pI1Q
fSto+e9TStTHUm7IqCkbU0XgnnQ8NIxdcTtuRqM+gXI5o5OfkqhxLzrukJCb
0PU8rG+7/5rDwcJPFZxzJC+R8i65jnt/pRb3pBOh+wAzT1+oRb2J8uyCP3uc
xzW4J20C5t3Lc3cua1CfRHlL8p4eMDG4J70CTKvWfzRPZkS9mXJjUsvF5R8a
cE96JSTd2vPjAjYe9aso29q73muojsM96Rfh2cc9dVFxS1CfSjlhceB3UsUS
3ItWuEq5cB5AHuRwj1cmwLi5Xrh7hrarMzxjRUAs7gkLAL/0pd4++9Do67k0
yid62EZFEId7wnwaDP4QanZOGtA82gPf7Jj4o0WPe8JCGsT/98JlMWheOuXk
LOmNG/kq3BPm0+HRPvf5zSMqNI+2W/fM3hMbwnBPejXUv9V0ZOh7cb+0940O
nerL1OGesOC3b78Wyt/2FQ6+I9XinrQFBlpr2Z9NLOozKb/ZG9AUXcDgnnQm
bJ1pnO7XaFBvpRy7s2jDyU3+njBvhYGD7fxwMYPOS/uNT02Pq9oicU9YsMIE
83bb9V8j0Dwb5W36lGXSxAjcE+Zt0D3dLB9Xof4M7RL17Ad7h8JxT1iwQX/I
l0VBnnA07yXKrXXmgOz9YbgnzK+BK+f6KjvYSDSP9sjTM/E7Pvb3hAW/ffOy
KCtue7T9SaG4J8xnQ3+Tcqn7MzWaR9t7W899Ua7GPWEhG/J71Qfu5aGey6H8
5L6fU+GedA40DjLnt99F/wtnp1xxPEJWEByJe8K8HbpPT7RfzRK/F+3XPde1
N2cX4Z6wYIe/1975/JPVIVARNVy6MzSXcmDn4ldKUvy96JrRF+pr4vzPn/Tr
aF9rtnw19SgY94RLc8HlPe6mY8G+vp52ym/22pNb5LgX/S8+H/AH
         "]]}}, {
       EdgeForm[
        Thickness[0.001]], {Antialiasing -> False, 
        Directive[
         AbsoluteThickness[1], 
         EdgeForm[None]], 
        Line[{}]}, 
       Polygon[{}]}}, {}, {}}, {}, {}}, 
   System`TradingChartDump`$indicatorpos$11297 = 
   System`TradingChartDump`$staticindicatorpos$11297, 
   System`TradingChartDump`$length$11297 = 69, 
   System`TradingChartDump`$gridlinesflag$11297 = True, 
   System`TradingChartDump`$opens$11297 = {
   1 -> 11.85`4., 2 -> 11.57`4., 3 -> 11.29`4., 4 -> 12.67`4., 5 -> 11.75`4., 
    6 -> 10.77`4., 7 -> 11.04`4., 8 -> 8.73`3., 9 -> 9.7`3., 10 -> 9.81`3., 
    11 -> 8.21`3., 12 -> 5.37`3., 13 -> 6.74`3., 14 -> 6.09`3., 15 -> 7.96`3.,
     16 -> 7.57`3., 17 -> 9.67`3., 18 -> 9.18`3., 19 -> 8.87`3., 20 -> 
    8.07`3., 21 -> 9.41`3., 22 -> 9.65`3., 23 -> 9.89`3., 24 -> 11.29`4., 25 -> 
    11.49`4., 26 -> 12.51`4., 27 -> 11.76`4., 28 -> 12.86`4., 29 -> 14.57`4., 
    30 -> 13.75`4., 31 -> 14.08`4., 32 -> 13.92`4., 33 -> 15.24`4., 34 -> 
    12.98`4., 35 -> 11.97`4., 36 -> 11.11`4., 37 -> 6.95`3., 38 -> 5.25`3., 
    39 -> 8.89`3., 40 -> 11.38`4., 41 -> 11.9`4., 42 -> 10.14`4., 43 -> 9.`3.,
     44 -> 9.6`3., 45 -> 8.24`3., 46 -> 8.57`3., 47 -> 8.19`3., 48 -> 6.21`3.,
     49 -> 6.03`3., 50 -> 5.97`3., 51 -> 5.36`3., 52 -> 6.01`3., 53 -> 
    6.28`3., 54 -> 5.4`3., 55 -> 5.12`3., 56 -> 6.02`3., 57 -> 6.51`3., 58 -> 
    6.96`3., 59 -> 7.66`3., 60 -> 7.58`3., 61 -> 7.`3., 62 -> 6.98`3., 63 -> 
    6.32`3., 64 -> 4.82`3., 65 -> 4.56`3., 66 -> 3.82`3., 67 -> 3.5`3., 68 -> 
    3.96`3., 69 -> 4.92`3.}, System`TradingChartDump`$highs$11297 = {
   1 -> 12.36`4., 2 -> 12.04`4., 3 -> 13.07`4., 4 -> 12.92`4., 5 -> 12.84`4., 
    6 -> 11.77`4., 7 -> 11.54`4., 8 -> 10.74`4., 9 -> 10.25`4., 10 -> 
    10.79`4., 11 -> 9.04`3., 12 -> 7.71`3., 13 -> 7.4`3., 14 -> 8.35`3., 15 -> 
    8.42`3., 16 -> 9.73`3., 17 -> 10.07`4., 18 -> 9.86`3., 19 -> 8.96`3., 20 -> 
    9.55`3., 21 -> 10.13`4., 22 -> 9.94`3., 23 -> 11.32`4., 24 -> 11.52`4., 
    25 -> 12.79`4., 26 -> 12.66`4., 27 -> 12.9`4., 28 -> 14.87`4., 29 -> 
    15.2`4., 30 -> 14.9`4., 31 -> 14.83`4., 32 -> 15.69`4., 33 -> 15.24`4., 
    34 -> 14.87`4., 35 -> 12.98`4., 36 -> 12.06`4., 37 -> 7.54`3., 38 -> 
    8.94`3., 39 -> 11.62`4., 40 -> 12.33`4., 41 -> 12.5`4., 42 -> 11.2`4., 43 -> 
    10.84`4., 44 -> 10.11`4., 45 -> 9.67`3., 46 -> 8.98`3., 47 -> 8.47`3., 48 -> 
    6.74`3., 49 -> 6.85`3., 50 -> 5.99`3., 51 -> 6.52`3., 52 -> 6.33`3., 53 -> 
    6.88`3., 54 -> 5.84`3., 55 -> 6.09`3., 56 -> 6.78`3., 57 -> 6.99`3., 58 -> 
    7.93`3., 59 -> 7.96`3., 60 -> 7.68`3., 61 -> 7.12`3., 62 -> 7.17`3., 63 -> 
    6.79`3., 64 -> 5.4`3., 65 -> 4.57`3., 66 -> 4.68`3., 67 -> 4.28`3., 68 -> 
    5.05`3., 69 -> 5.49`3.}, System`TradingChartDump`$lows$11297 = {
   1 -> 10.15`4., 2 -> 10.3`4., 3 -> 11.19`4., 4 -> 10.12`4., 5 -> 9.6`3., 6 -> 
    9.75`3., 7 -> 6.92`3., 8 -> 8.`3., 9 -> 8.78`3., 10 -> 7.57`3., 11 -> 
    5.06`3., 12 -> 4.88`3., 13 -> 5.15`3., 14 -> 6.06`3., 15 -> 7.37`3., 16 -> 
    7.49`3., 17 -> 8.61`3., 18 -> 8.42`3., 19 -> 7.93`3., 20 -> 8.07`3., 21 -> 
    9.21`3., 22 -> 9.19`3., 23 -> 9.49`3., 24 -> 10.56`4., 25 -> 11.21`4., 26 -> 
    10.76`4., 27 -> 11.25`4., 28 -> 12.71`4., 29 -> 13.2`4., 30 -> 13.27`4., 
    31 -> 12.74`4., 32 -> 13.82`4., 33 -> 10.82`4., 34 -> 11.8`4., 35 -> 
    10.08`4., 36 -> 5.05`3., 37 -> 4.04`3., 38 -> 5.14`3., 39 -> 8.24`3., 40 -> 
    10.67`4., 41 -> 8.96`3., 42 -> 7.43`3., 43 -> 8.61`3., 44 -> 7.33`3., 45 -> 
    7.59`3., 46 -> 7.66`3., 47 -> 5.31`3., 48 -> 5.23`3., 49 -> 5.55`3., 50 -> 
    4.3`3., 51 -> 4.1`3., 52 -> 5.52`3., 53 -> 5.27`3., 54 -> 4.94`3., 55 -> 
    4.81`3., 56 -> 6.02`3., 57 -> 6.2`3., 58 -> 6.81`3., 59 -> 7.05`3., 60 -> 
    6.45`3., 61 -> 5.77`3., 62 -> 6.15`3., 63 -> 4.55`3., 64 -> 4.44`3., 65 -> 
    3.31`3., 66 -> 3.15`3., 67 -> 3.27`3., 68 -> 3.89`3., 69 -> 4.92`3.}, 
   System`TradingChartDump`$closes$11297 = {
   1 -> 11.57`4., 2 -> 11.38`4., 3 -> 12.82`4., 4 -> 11.75`4., 5 -> 10.66`4., 
    6 -> 11.02`4., 7 -> 8.62`3., 8 -> 9.7`3., 9 -> 9.81`3., 10 -> 8.28`3., 11 -> 
    5.33`3., 12 -> 6.74`3., 13 -> 6.03`3., 14 -> 7.86`3., 15 -> 7.5`3., 16 -> 
    9.67`3., 17 -> 9.12`3., 18 -> 8.79`3., 19 -> 8.1`3., 20 -> 9.41`3., 21 -> 
    9.67`3., 22 -> 9.88`3., 23 -> 11.26`4., 24 -> 11.49`4., 25 -> 12.42`4., 
    26 -> 11.77`4., 27 -> 12.85`4., 28 -> 14.57`4., 29 -> 13.76`4., 30 -> 
    14.1`4., 31 -> 14.04`4., 32 -> 15.24`4., 33 -> 13.`4., 34 -> 12.02`4., 35 -> 
    10.82`4., 36 -> 6.83`3., 37 -> 5.35`3., 38 -> 8.82`3., 39 -> 11.33`4., 40 -> 
    11.9`4., 41 -> 10.14`4., 42 -> 9.`3., 43 -> 9.6`3., 44 -> 8.17`3., 45 -> 
    8.44`3., 46 -> 8.2`3., 47 -> 6.41`3., 48 -> 6.05`3., 49 -> 5.94`3., 50 -> 
    5.38`3., 51 -> 5.97`3., 52 -> 6.28`3., 53 -> 5.4`3., 54 -> 5.05`3., 55 -> 
    6.03`3., 56 -> 6.51`3., 57 -> 6.92`3., 58 -> 7.63`3., 59 -> 7.61`3., 60 -> 
    7.`3., 61 -> 7.02`3., 62 -> 6.26`3., 63 -> 4.74`3., 64 -> 4.56`3., 65 -> 
    3.87`3., 66 -> 3.43`3., 67 -> 3.95`3., 68 -> 4.96`3., 69 -> 5.05`3.}, 
   System`TradingChartDump`$fastpos$11297 = True, 
   System`TradingChartDump`$gridlines$11297 = {Automatic, Automatic}, 
   System`TradingChartDump`$subplotgridlines$11297, 
   System`TradingChartDump`$plotrangemin$11297 = 2.5229295, 
   System`TradingChartDump`$plotrangemax$11297 = 16.945551, 
   System`TradingChartDump`$layoutData$11297, 
   System`TradingChartDump`$gridlinesscope$11297 = {"YearShort"}, 
   System`TradingChartDump`$axes$11297 = {True, True}, 
   System`TradingChartDump`$indicators$11297 = {"Volume"}, 
   System`TradingChartDump`$mouseQ$11297 = False, 
   System`TradingChartDump`$modelData$11297 = 
   System`TradingChartDump`modelData$9915, System`TradingChartDump`$sy$11297 =
    Identity, System`TradingChartDump`$isy$11297 = Identity, 
   System`TradingChartDump`$appearance$11297 = Automatic, 
   System`TradingChartDump`$perfgoal$11297 = "Quality", 
   System`TradingChartDump`$axesorigin$11297 = Automatic, 
   System`TradingChartDump`$framestyle$11297 = {{
     Directive[], 
     Directive[]}, {
     Directive[], 
     Directive[]}}, System`TradingChartDump`$frameticksstyle$11297 = {{
     Directive[], 
     Directive[]}, {
     Directive[], 
     Directive[]}}, System`TradingChartDump`$labelstyle$11297 = {
    GrayLevel[0.4], FontFamily -> "Arial"}, 
   System`TradingChartDump`$tickstextstyle$11297 = {
    Directive[
     GrayLevel[0.4], FontFamily -> "Arial"], 
    Directive[
     GrayLevel[0.4], FontFamily -> "Arial"]}, 
   System`TradingChartDump`$textstyle$11297 = Directive[
    GrayLevel[0.4], FontFamily -> "Arial"], 
   System`TradingChartDump`$staticindicatorpos$11297, 
   System`TradingChartDump`$newgridlines$11297 = {{{4.5, {}}, {8.5, {}}, {
     12.5, {}}, {16.5, {}}, {20.5, {}}, {24.5, {}}, {28.5, {}}, {32.5, {}}, {
     36.5, {}}, {40.5, {}}, {44.5, {}}, {48.5, {}}, {52.5, {}}, {56.5, {}}, {
     60.5, {}}, {64.5, {}}, {68.5, {}}, {4.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {8.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {12.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {16.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {20.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {24.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {28.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {32.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {36.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {40.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {44.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {48.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {52.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {56.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {60.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {64.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}, {68.5, 
      Directive[
       Opacity[0.4], 
       Dashing[{}]]}}, FindDivisions[{2.5229295, #2}, 6]& }, 
   System`TradingChartDump`$defaultframeticksstyle$11297 = {{
    "GraphicsFrameTicks", "GraphicsFrameTicks"}, {
    "GraphicsFrameTicks", "GraphicsFrameTicks"}}, 
   System`TradingChartDump`$defaultlabelstyle$11297 = "GraphicsLabel", 
   System`TradingChartDump`$defaultframestyle$11297 = {{
    "GraphicsFrame", "GraphicsFrame"}, {"GraphicsFrame", "GraphicsFrame"}}, 
   System`TradingChartDump`$frame$11297 = {{True, True}, {True, True}}, 
   System`TradingChartDump`$frameticks$11297 = {{None, Automatic}, {
    Automatic, None}}, System`TradingChartDump`$basestyle$11297 = Directive[],
    System`TradingChartDump`$indicatorstyle$11297 = {
    RGBColor[0.4947336, 0.6054231999999999, 0.7678384], 
    RGBColor[0.880722, 0.611041, 0.142051], 
    RGBColor[0.560181, 0.691569, 0.194885], 
    RGBColor[0.922526, 0.385626, 0.209179], 
    RGBColor[0.528488, 0.470624, 0.701351], 
    RGBColor[0.772079, 0.431554, 0.102387], 
    RGBColor[0.363898, 0.618501, 0.782349], 
    RGBColor[1, 0.75, 0], 
    RGBColor[0.647624, 0.37816, 0.614037], 
    RGBColor[0.571589, 0.586483, 0.], 
    RGBColor[0.915, 0.3325, 0.2125], 
    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
    RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
   System`TradingChartDump`$axesstyle$11297 = {
    Directive[], 
    Directive[]}, System`TradingChartDump`$ticksstyle$11297 = {
    Directive[], 
    Directive[]}, System`TradingChartDump`$dateaxisgap$11297 = Offset[15], 
   System`TradingChartDump`$subplotgap$11297 = 1.5}, {
    DynamicBox[Typeset`ToBoxes[
     If[System`TradingChartDump`$highlightposition$11297 =!= Automatic, 
        System`TradingChartDump`$staticindicatorpos$11297 = 
         Switch[System`TradingChartDump`$highlightposition$11297, 
           Alternatives["Left", Left], 
           Clip[
            Ceiling[System`TradingChartDump`$controlmin$11297], {
            1, System`TradingChartDump`$length$11297}], 
           Alternatives["Right", Right], 
           Clip[
            Ceiling[System`TradingChartDump`$controlmax$11297], {
            1, System`TradingChartDump`$length$11297}], 
           Blank[], 
           Last[
            Flatten[
             Position[System`TradingChartDump`$dates$11297, 
              Charting`nearestDate[
              System`TradingChartDump`$dates$11297, 
               System`TradingChartDump`$highlightposition$11297, 
               Part[
               System`TradingChartDump`$dates$11297, 
                Floor[System`TradingChartDump`$controlmin$11297] + 1], 
               Part[System`TradingChartDump`$dates$11297, 
                Floor[System`TradingChartDump`$controlmax$11297]], 
               Automatic]]]]]; Null]; 
      System`TradingChartDump`$fastpos$11297 = First[
         MousePosition[{"Graphics", Graphics}, {True, 0}]]; 
      System`TradingChartDump`$indicatorpos$11297 = 
       If[System`TradingChartDump`$fastpos$11297 =!= True, 
         System`TradingChartDump`$fastpos$11297 = 
          Clip[System`TradingChartDump`$fastpos$11297, {0, 100}] - 0.5; 
         System`TradingChartDump`$fastpos$11297 = (
             Floor[System`TradingChartDump`$controlmax$11297] - Floor[
             System`TradingChartDump`$controlmin$11297]) 
            System`TradingChartDump`$fastpos$11297/100 + 
           Floor[System`TradingChartDump`$controlmin$11297]; Clip[
           Ceiling[System`TradingChartDump`$fastpos$11297], {
           Floor[System`TradingChartDump`$controlmin$11297] + 1, 
            Floor[System`TradingChartDump`$controlmax$11297]}], 
         System`TradingChartDump`$staticindicatorpos$11297]; 
      System`TradingChartDump`$mouseQ$11297 = Or[
         Not[
          TrueQ[System`TradingChartDump`$fastpos$11297]], 
         System`TradingChartDump`$highlightposition$11297 =!= Automatic]; 
      System`TradingChartDump`$ohlcpoint$11297 = If[
         And[
         System`TradingChartDump`$bouncingballQ$11297, 
          System`TradingChartDump`$mouseQ$11297, 
          System`TradingChartDump`$appearance$11297 =!= None], 
         Dynamic[
          Point[
           FEPrivate`Part[
            System`TradingChartDump`$layoutData$11297["MainChartPoints"], 
            System`TradingChartDump`$indicatorpos$11297]]], {}]; Table[
        With[{System`TradingChartDump`i$ = System`TradingChartDump`l}, 
         System`TradingChartDump`$overlaypoint$11297[
          System`TradingChartDump`i$] = 
         If[System`TradingChartDump`$mouseQ$11297, 
           Dynamic[
            Point[
             FEPrivate`Part[
              System`TradingChartDump`$layoutData$11297[
              "OverlayIndicatorPoints", {System`TradingChartDump`i$}], 
              System`TradingChartDump`$indicatorpos$11297]]], {}]], {
        System`TradingChartDump`l, 
         Length[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorNames"]]}]; Table[
        With[{System`TradingChartDump`i$ = System`TradingChartDump`i}, 
         Table[
          
          With[{System`TradingChartDump`k$ = System`TradingChartDump`k}, 
           System`TradingChartDump`$overlayvalue$11297[
            System`TradingChartDump`i$, System`TradingChartDump`k$] = 
           If[System`TradingChartDump`$mouseQ$11297, 
             NumberForm[
              Part[
               System`TradingChartDump`$layoutData$11297[
               "OverlayIndicatorValues", {System`TradingChartDump`i$}], 
               System`TradingChartDump`$indicatorpos$11297, 
               System`TradingChartDump`k$], {
              System`TradingChartDump`$ndigits$11297, 2}, 
              NumberPadding -> {" ", "0"}], {}]], {System`TradingChartDump`k, 
           Length[
            System`TradingChartDump`$layoutData$11297[
            "OverlayIndicatorLegends", {System`TradingChartDump`i$}]]}]], {
        System`TradingChartDump`i, 
         Length[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorNames"]]}]; 
      System`TradingChartDump`$overlaylegends = Inset[
         Style[
          Row[
           Table[
            With[{System`TradingChartDump`i$ = System`TradingChartDump`i}, 
             Row[
              Prepend[
               Riffle[
                Table[
                 Row[{
                   Style[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "OverlayIndicatorLegends", {System`TradingChartDump`i$}], 
                    System`TradingChartDump`k], 
                    System`TradingChartDump`$textstyle$11297, FontFamily -> 
                    "Times"], 
                   If[Length[
                    System`TradingChartDump`$layoutData$11297[
                    "OverlayIndicatorParameters", {
                    System`TradingChartDump`i$}]] >= 
                    System`TradingChartDump`k, 
                    If[Length[
                    Flatten[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "OverlayIndicatorParameters", {
                    System`TradingChartDump`i$}], 
                    System`TradingChartDump`k]]] =!= 0, 
                    Style[
                    Row[{"(", 
                    Apply[Sequence, 
                    Riffle[
                    Table[
                    Part[
                    Flatten[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "OverlayIndicatorParameters", {
                    System`TradingChartDump`i$}], System`TradingChartDump`k]],
                     System`TradingChartDump`m], {System`TradingChartDump`m, 
                    Length[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "OverlayIndicatorParameters", {
                    System`TradingChartDump`i$}], 
                    System`TradingChartDump`k]]}], ", "]], ")", ":"}], 
                    System`TradingChartDump`$textstyle$11297, FontFamily -> 
                    "Times"], 
                    Style[":", System`TradingChartDump`$textstyle$11297]], 
                    Style[":", System`TradingChartDump`$textstyle$11297]], 
                   
                   With[{System`TradingChartDump`k$ = 
                    System`TradingChartDump`k}, 
                    Dynamic[
                    Style[
                    System`TradingChartDump`$overlayvalue$11297[
                    System`TradingChartDump`i$, System`TradingChartDump`k$], 
                    System`TradingChartDump`$textstyle$11297]]]}], {
                 System`TradingChartDump`k, 
                  Length[
                   System`TradingChartDump`$layoutData$11297[
                   "OverlayIndicatorLegends", {
                    System`TradingChartDump`i$}]]}], " "], "  "]]], {
            System`TradingChartDump`i, 
             Length[
              System`TradingChartDump`$layoutData$11297[
              "OverlayIndicatorNames"]]}], ImageSize -> {300, Automatic}, 
           ImageMargins -> {{0, 0}, {5, 5}}, Alignment -> {Left, Center}], 
          LineIndent -> 0], 
         Scaled[{0, 1}], {Left, Top}, {
         System`TradingChartDump`$length$11297, Automatic}, Alignment -> Left,
          Background -> System`TradingChartDump`$timestampstyle$11297]; Table[
        With[{System`TradingChartDump`i$ = System`TradingChartDump`i}, 
         Table[
          
          With[{System`TradingChartDump`k$ = System`TradingChartDump`k}, 
           System`TradingChartDump`$subplotvalue$11297[
            System`TradingChartDump`i$, System`TradingChartDump`k$] = 
           If[System`TradingChartDump`$mouseQ$11297, 
             NumberForm[
              Part[
               System`TradingChartDump`$layoutData$11297[
               "SubplotIndicatorValues", {System`TradingChartDump`i$}], 
               System`TradingChartDump`$indicatorpos$11297, 
               System`TradingChartDump`k$], {
              System`TradingChartDump`$ndigits$11297, 2}, 
              NumberPadding -> {" ", "0"}, 
              ExponentFunction -> (If[-3 < # < 3, Null, 3 Quotient[#, 3]]& )], 
             Invisible[
              Part[
               System`TradingChartDump`$layoutData$11297[
               "SubplotIndicatorValues", {System`TradingChartDump`i$}], -1, 
               System`TradingChartDump`k$]]]], {System`TradingChartDump`k, 
           Length[
            System`TradingChartDump`$layoutData$11297[
            "SubplotIndicatorLegends", {System`TradingChartDump`i$}]]}]], {
        System`TradingChartDump`i, 
         Length[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorNames"]]}]; Table[
        With[{System`TradingChartDump`i$ = System`TradingChartDump`i}, 
         System`TradingChartDump`$layoutData$11297[
           "SubplotPoints", {System`TradingChartDump`i$}] = DeleteCases[
            Part[
             System`TradingChartDump`$layoutData$11297[
             "SubplotIndicatorValues", {System`TradingChartDump`i$}], 
             Span[
              Max[
               Floor[System`TradingChartDump`$controlmin$11297], 1], 
              Floor[System`TradingChartDump`$controlmax$11297]]], "", 
            Infinity]; 
         System`TradingChartDump`$min$11297[System`TradingChartDump`i$] = 
          ReplaceAll[
            Min[
             System`TradingChartDump`$layoutData$11297[
             "SubplotPoints", {System`TradingChartDump`i$}]], 
            Alternatives[Infinity, -Infinity] -> 0]; 
         System`TradingChartDump`$max$11297[System`TradingChartDump`i$] = 
          ReplaceAll[
            Max[
             System`TradingChartDump`$layoutData$11297[
             "SubplotPoints", {System`TradingChartDump`i$}]], 
            Alternatives[Infinity, -Infinity] -> 0]; 
         If[System`TradingChartDump`$min$11297[System`TradingChartDump`i$] == 
           System`TradingChartDump`$max$11297[System`TradingChartDump`i$] == 
           0., System`TradingChartDump`$min$11297[System`TradingChartDump`i$] = 
            0; System`TradingChartDump`$max$11297[System`TradingChartDump`i$] = 
            1]; If[System`TradingChartDump`$min$11297[
            System`TradingChartDump`i$] == 
           System`TradingChartDump`$max$11297[System`TradingChartDump`i$], 
           System`TradingChartDump`$min$11297[System`TradingChartDump`i$] = 
            System`TradingChartDump`$min$11297[System`TradingChartDump`i$] - 
             0.1 Abs[
               System`TradingChartDump`$min$11297[
               System`TradingChartDump`i$]]; 
           System`TradingChartDump`$max$11297[System`TradingChartDump`i$] = 
            System`TradingChartDump`$max$11297[System`TradingChartDump`i$] + 
             0.1 Abs[
                System`TradingChartDump`$max$11297[
                System`TradingChartDump`i$]]]; 
         System`TradingChartDump`$subplotrect$11297[
           System`TradingChartDump`i$] = If[
            And[
            System`TradingChartDump`$timestampQ$11297, 
             System`TradingChartDump`$mouseQ$11297], 
            
            Rectangle[{
             System`TradingChartDump`$indicatorpos$11297 - 0.5, 
              System`TradingChartDump`$min$11297[System`TradingChartDump`i$] - 
              0.15 Abs[
               System`TradingChartDump`$max$11297[System`TradingChartDump`i$] - 
                System`TradingChartDump`$min$11297[
                System`TradingChartDump`i$]]}, 
             If[System`TradingChartDump`$timestampdepth$11297 === "Full", 
              
              Scaled[{0, 0}, {
               System`TradingChartDump`$indicatorpos$11297 + 0.5, 
                System`TradingChartDump`$max$11297[
                 System`TradingChartDump`i$] + 
                0.5 Abs[
                  System`TradingChartDump`$max$11297[
                    System`TradingChartDump`i$] - 
                   System`TradingChartDump`$min$11297[
                   System`TradingChartDump`i$]]}], 
              Offset[{0, 
                Part[System`TradingChartDump`$timestampdepth$11297, 1]}, {
               System`TradingChartDump`$indicatorpos$11297 + 0.5, 
                System`TradingChartDump`$min$11297[
                 System`TradingChartDump`i$] - 0.15 
                Abs[System`TradingChartDump`$max$11297[
                   System`TradingChartDump`i$] - 
                  System`TradingChartDump`$min$11297[
                  System`TradingChartDump`i$]]}]]], {}]; 
         System`TradingChartDump`$subplotpoint$11297[
           System`TradingChartDump`i$] = If[
            And[
            System`TradingChartDump`$bouncingballQ$11297, 
             System`TradingChartDump`$mouseQ$11297, 
             System`TradingChartDump`$appearance$11297 =!= None], 
            Dynamic[
             Point[
              FEPrivate`Part[
               System`TradingChartDump`$layoutData$11297[
               "SubplotIndicatorPoints", {System`TradingChartDump`i$}], 
               System`TradingChartDump`$indicatorpos$11297]]], {}]; 
         System`TradingChartDump`$subplotgridlines$11297[
           System`TradingChartDump`i$] = 
          System`TradingChartDump`$layoutData$11297[
           "SubplotIndicatorGridLines", {System`TradingChartDump`i$}]; 
         Null], {System`TradingChartDump`i, 
         Length[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorNames"]]}]; 
      System`TradingChartDump`$ohlclabel$11297 = Grid[{{
           Style[
           "O: ", 12, System`TradingChartDump`$textstyle$11297, FontFamily -> 
            "Times", LineBreakWithin -> False], 
           Style[
            Dynamic[
             ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
              Dispatch[System`TradingChartDump`$opens$11297]]], 12, 
            System`TradingChartDump`$textstyle$11297, FontFamily -> "Times"], 
           Style[
           "H: ", 12, System`TradingChartDump`$textstyle$11297, FontFamily -> 
            "Times", LineBreakWithin -> False], 
           Style[
            Dynamic[
             ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
              Dispatch[System`TradingChartDump`$highs$11297]]], 12, 
            System`TradingChartDump`$textstyle$11297, FontFamily -> "Times"], 
           Style[
           "L: ", 12, System`TradingChartDump`$textstyle$11297, FontFamily -> 
            "Times", LineBreakWithin -> False], 
           Style[
            Dynamic[
             ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
              Dispatch[System`TradingChartDump`$lows$11297]]], 12, 
            System`TradingChartDump`$textstyle$11297, FontFamily -> "Times"], 
           Style[
           "C: ", 12, System`TradingChartDump`$textstyle$11297, FontFamily -> 
            "Times", LineBreakWithin -> False], 
           Style[
            Dynamic[
             ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
              Dispatch[System`TradingChartDump`$closes$11297]]], 12, 
            System`TradingChartDump`$textstyle$11297, FontFamily -> "Times"], 
           Style[
            Dynamic[
             ReplaceAll[System`TradingChartDump`$indicatorpos$11297, 
              Dispatch[System`TradingChartDump`$visdates$11297]]], 12, 
            System`TradingChartDump`$textstyle$11297, FontFamily -> "Times", 
            LineBreakWithin -> False]}}, ItemSize -> Automatic, 
         Spacings -> {{0, 0, 1, 0, 1, 0, 1, 0, 1, 0}, 0}, Frame -> False]; {},
       StandardForm, Graphics],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}},
     TrackedSymbols:>{}], 
    DynamicBox[Typeset`ToBoxes[
      Deploy[
       Inset[
        Graphics[{
          Dynamic[
           If[
            And[
            System`TradingChartDump`$timestampQ$11297, 
             System`TradingChartDump`$mouseQ$11297], {{
             System`TradingChartDump`$timestampstyle$11297, 
              
              Rectangle[{
               System`TradingChartDump`$indicatorpos$11297 - 0.5, 
                System`TradingChartDump`$plotrangemin$11297}, 
               If[System`TradingChartDump`$timestampdepth$11297 === "Full", 
                Scaled[{0, 
                  System`TradingChartDump`$isy$11297[1]}, {
                 System`TradingChartDump`$indicatorpos$11297 + 0.5, 
                  System`TradingChartDump`$plotrangemin$11297}], 
                Offset[{0, 
                  Part[System`TradingChartDump`$timestampdepth$11297, 1]}, {
                 System`TradingChartDump`$indicatorpos$11297 + 0.5, 
                  System`TradingChartDump`$plotrangemin$11297}]]]}}, {}]], 
          System`TradingChartDump`$candlestickchart$11297, {
          System`TradingChartDump`$highlightstyle$11297, 
           Dynamic[System`TradingChartDump`$ohlcpoint$11297]}, 
          Table[
           With[{System`TradingChartDump`i$ = System`TradingChartDump`l}, {
             System`TradingChartDump`$layoutData$11297[
             "OverlayIndicator", {System`TradingChartDump`i$}], {
             System`TradingChartDump`$highlightstyle$11297, 
              Dynamic[
               System`TradingChartDump`$overlaypoint$11297[
               System`TradingChartDump`i$]]}}], {System`TradingChartDump`l, 
            Length[
             System`TradingChartDump`$layoutData$11297[
             "OverlayIndicatorNames"]]}], 
          Dynamic[
           If[
            And[System`TradingChartDump`$mouseQ$11297, Length[
               System`TradingChartDump`$layoutData$11297[
               "OverlayIndicatorNames"]] =!= 0], 
            System`TradingChartDump`$overlaylegends, {}], 
           TrackedSymbols :> {System`TradingChartDump`$mouseQ$11297}]}, 
         PlotLabel -> None, 
         PlotRange -> {{
           Floor[System`TradingChartDump`$controlmin$11297] + 0.5, 
            Floor[System`TradingChartDump`$controlmax$11297] + 0.5}, {
           System`TradingChartDump`$plotrangemin$11297, 
            System`TradingChartDump`$plotrangemax$11297}}, AspectRatio -> 
         Full, Frame -> {
           Switch[System`TradingChartDump`$axesorigin$11297, Left, {False, 
             Part[System`TradingChartDump`$frame$11297, 1, 2]}, 
            Blank[], {
             Part[System`TradingChartDump`$frame$11297, 1, 1], False}], {
           False, 
            Part[System`TradingChartDump`$frame$11297, 2, 2]}}, FrameTicks -> 
         System`TradingChartDump`$frameticks$11297, Axes -> False, FrameTicks -> 
         None, GridLines -> System`TradingChartDump`$newgridlines$11297, 
         ImagePadding -> {{1, 1}, {0, 15}}, PlotRangeClipping -> False, 
         PlotRangePadding -> None, Epilog -> Deploy[
           Inset[
            Dynamic[
             If[System`TradingChartDump`$mouseQ$11297, 
              Dynamic[System`TradingChartDump`$ohlclabel$11297], 
              Text[
               Spacer[{1, 9}]]], 
             TrackedSymbols :> {System`TradingChartDump`$mouseQ$11297}], {
            Left, Top}, {Left, Top}]], System`TradingChartDump`$opts$11297], {
        0.5, 0}, {Left, Bottom}, {
        100, System`TradingChartDump`$aspectratio$11297 100}]], StandardForm, 
      Graphics],
     ImageSizeCache->{{16.98400852878464, 
      671.9946695095949}, {-264.9094257398376, 139.90942573983753`}}], 
    TagBox[
     DynamicBox[Typeset`ToBoxes[
       Inset[
        Graphics[{
          GrayLevel[0.4], 
          AbsoluteThickness[0.5], {
           Opacity[0], 
           
           Point[{{-0.001, System`TradingChartDump`$plotrangemin$11297}, {
             0.001, System`TradingChartDump`$plotrangemin$11297 + 0.1}}]}, 
          System`TradingChartDump`$basestyle$11297, 
          If[
          Part[System`TradingChartDump`$defaultframestyle$11297, 1, 2] =!= 
           "GraphicsFrame", 
           Part[System`TradingChartDump`$defaultframestyle$11297, 1, 2]], 
          If[
           And[
            Not[
             Last[System`TradingChartDump`$axes$11297]], 
            Not[
             Part[System`TradingChartDump`$frame$11297, 1, 2]]], {}, 
           
           Charting`ScaleAxis[{
            "Line", {{0, System`TradingChartDump`$plotrangemin$11297} -> 
              System`TradingChartDump`$isy$11297[
               System`TradingChartDump`$plotrangemin$11297], {
               0, System`TradingChartDump`$plotrangemax$11297} -> 
              System`TradingChartDump`$isy$11297[
               System`TradingChartDump`$plotrangemax$11297]}}, 
            FindDivisions[{
              System`TradingChartDump`$isy$11297[
              System`TradingChartDump`$plotrangemin$11297], 
              System`TradingChartDump`$isy$11297[
              System`TradingChartDump`$plotrangemax$11297]}, {6}], 
            ScalingFunctions -> {
             System`TradingChartDump`$sy$11297, 
              System`TradingChartDump`$isy$11297}, Charting`LabelSide -> 
            Switch[System`TradingChartDump`$axesorigin$11297, Left, 
              If[
              System`TradingChartDump`$plotrangemax$11297 > 
               System`TradingChartDump`$plotrangemin$11297, Left, Right], 
              Blank[], 
              If[
              System`TradingChartDump`$plotrangemax$11297 > 
               System`TradingChartDump`$plotrangemin$11297, Right, Left]], 
            Charting`TickSide -> 
            Switch[System`TradingChartDump`$axesorigin$11297, Left, 
              If[
              System`TradingChartDump`$plotrangemax$11297 > 
               System`TradingChartDump`$plotrangemin$11297, Left, Right], 
              Blank[], 
              If[
              System`TradingChartDump`$plotrangemax$11297 > 
               System`TradingChartDump`$plotrangemin$11297, Right, Left]], 
            AxesStyle -> If[
              Part[System`TradingChartDump`$frame$11297, 1, 2], 
              Part[System`TradingChartDump`$framestyle$11297, 1, 2], 
              Part[System`TradingChartDump`$axesstyle$11297, 2]], LabelStyle -> 
            Part[System`TradingChartDump`$tickstextstyle$11297, 2], 
            TicksStyle -> If[
              Part[System`TradingChartDump`$frame$11297, 1, 2], 
              Part[System`TradingChartDump`$frameticksstyle$11297, 1, 2], 
              Part[System`TradingChartDump`$ticksstyle$11297, 2]], 
            Antialiasing -> False, Charting`TickLabels -> 
            Part[System`TradingChartDump`$frameticks$11297, 1, 2], 
            Charting`TickMarkers -> 
            Part[System`TradingChartDump`$frameticks$11297, 1, 2], 
            If[
            System`TradingChartDump`$defaultframeticksstyle$11297 =!= 
             "GraphicsFrameTicks", DefaultTicksStyle -> 
             Part[System`TradingChartDump`$defaultframeticksstyle$11297, 1, 
               2], DefaultTicksStyle -> 
             System`TradingChartDump`$defaultframeticksstyle$11297], 
            If[
            System`TradingChartDump`$defaultlabelstyle$11297 =!= 
             "GraphicsLabel", DefaultLabelStyle -> 
             Part[System`TradingChartDump`$defaultlabelstyle$11297, 2], 
             DefaultLabelStyle -> 
             System`TradingChartDump`$defaultlabelstyle$11297]]]}, 
         ImagePadding -> {{All, All}, {0, 15}}, PlotRangePadding -> None, 
         PlotRangeClipping -> False, Frame -> False, Axes -> False, PlotLabel -> 
         None, ImageSize -> {
          Automatic, System`TradingChartDump`$aspectratio$11297 100}], 
        Offset[{
          Switch[System`TradingChartDump`$axesorigin$11297, Left, 3, 
           Blank[], -2], 0}, {
          Switch[System`TradingChartDump`$axesorigin$11297, Left, 0.5, 
           Blank[], 100.5], 0}], 
        Switch[
        System`TradingChartDump`$axesorigin$11297, Left, {Right, Bottom}, 
         Blank[], {Left, Bottom}], {
        Automatic, System`TradingChartDump`$aspectratio$11297 100}], 
       StandardForm, Graphics],
      ImageSizeCache->{{669.9999999999999, 
       700.9999999999999}, {-264.9094257398376, 139.90942573983753`}}],
     Deploy,
     DefaultBaseStyle->"Deploy"], 
    DynamicBox[Typeset`ToBoxes[
      Table[
       With[{System`TradingChartDump`i$ = System`TradingChartDump`i}, {
         Deploy[
          Inset[
           Graphics[{{System`TradingChartDump`$timestampstyle$11297, 
              Dynamic[
               System`TradingChartDump`$subplotrect$11297[
               System`TradingChartDump`i$]]}, 
             System`TradingChartDump`$layoutData$11297[
             "SubplotIndicator", {System`TradingChartDump`i$}], {
             System`TradingChartDump`$highlightstyle$11297, 
              Dynamic[
               System`TradingChartDump`$subplotpoint$11297[
               System`TradingChartDump`i$]]}, 
             Inset[
              Dynamic[
               If[System`TradingChartDump`$mouseQ$11297, 
                Row[
                 Prepend[
                  Riffle[
                   Table[
                    Row[{
                    Style[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "SubplotIndicatorLegends", {System`TradingChartDump`i$}], 
                    System`TradingChartDump`k], 
                    System`TradingChartDump`$textstyle$11297, FontFamily -> 
                    "Times"], 
                    If[Length[
                    System`TradingChartDump`$layoutData$11297[
                    "SubplotIndicatorParameters", {
                    System`TradingChartDump`i$}]] >= 
                    System`TradingChartDump`k, 
                    If[Length[
                    Flatten[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "SubplotIndicatorParameters", {
                    System`TradingChartDump`i$}], 
                    System`TradingChartDump`k]]] =!= 0, 
                    Style[
                    Row[{"(", 
                    Apply[Sequence, 
                    Riffle[
                    Table[
                    Part[
                    Flatten[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "SubplotIndicatorParameters", {
                    System`TradingChartDump`i$}], System`TradingChartDump`k]],
                     System`TradingChartDump`m], {System`TradingChartDump`m, 
                    Length[
                    Flatten[
                    Part[
                    System`TradingChartDump`$layoutData$11297[
                    "SubplotIndicatorParameters", {
                    System`TradingChartDump`i$}], 
                    System`TradingChartDump`k]]]}], ", "]], ")", ":"}], 
                    System`TradingChartDump`$textstyle$11297], 
                    Style[":", System`TradingChartDump`$textstyle$11297]], 
                    Style[":", System`TradingChartDump`$textstyle$11297]], 
                    
                    With[{System`TradingChartDump`k$ = 
                    System`TradingChartDump`k}, 
                    Dynamic[
                    Style[
                    System`TradingChartDump`$subplotvalue$11297[
                    System`TradingChartDump`i$, System`TradingChartDump`k$], 
                    System`TradingChartDump`$textstyle$11297]]]}], {
                    System`TradingChartDump`k, 
                    Length[
                    System`TradingChartDump`$layoutData$11297[
                    "SubplotIndicatorLegends", {
                    System`TradingChartDump`i$}]]}], " "], "  "]], ""], 
               TrackedSymbols :> {System`TradingChartDump`$mouseQ$11297}], 
              Scaled[{0, 0.95}], {-1, 1}]}, AspectRatio -> Full, 
            PlotRangeClipping -> True, GridLines -> {
              Part[System`TradingChartDump`$newgridlines$11297, 1], 
              If[
              System`TradingChartDump`$subpricegridlines$11297 === Automatic, 
               System`TradingChartDump`$subplotgridlines$11297[
               System`TradingChartDump`i$], 
               Part[System`TradingChartDump`$newgridlines$11297, 2]]}, Frame -> {
              Switch[System`TradingChartDump`$axesorigin$11297, Left, {False, 
                Part[System`TradingChartDump`$frame$11297, 1, 2]}, 
               Blank[], {
                Part[System`TradingChartDump`$frame$11297, 1, 1], False}], {
               If[System`TradingChartDump`i$ == Length[
                  System`TradingChartDump`$layoutData$11297[
                  "SubplotIndicatorNames"]], 
                If[
                 MatchQ[
                  N[System`TradingChartDump`$dateaxisgap$11297], 0.], False, 
                 Part[System`TradingChartDump`$frame$11297, 2, 1]], 
                If[
                 MatchQ[
                  N[System`TradingChartDump`$subplotgap$11297], 0.], False, 
                 Part[System`TradingChartDump`$frame$11297, 2, 1]]], 
               Part[System`TradingChartDump`$frame$11297, 2, 2]}}, 
            ImagePadding -> {{1, 1}, {1, 0}}, FrameTicks -> None, Axes -> 
            False, PlotLabel -> None, PlotRangePadding -> None, 
            PlotRange -> {
             Map[Floor, {
                System`TradingChartDump`$controlmin$11297, 
                 System`TradingChartDump`$controlmax$11297}] + 0.5, {
              System`TradingChartDump`$min$11297[System`TradingChartDump`i$] - 
               0.15 Abs[
                System`TradingChartDump`$max$11297[
                  System`TradingChartDump`i$] - 
                 System`TradingChartDump`$min$11297[
                 System`TradingChartDump`i$]], 
               System`TradingChartDump`$max$11297[System`TradingChartDump`i$] + 
               0.5 Abs[
                 System`TradingChartDump`$max$11297[
                   System`TradingChartDump`i$] - 
                  System`TradingChartDump`$min$11297[
                  System`TradingChartDump`i$]]}}, 
            System`TradingChartDump`$opts$11297], 
           Offset[{0, 
             (If[Head[#] === Offset, -First[#], 0]& )[
             System`TradingChartDump`$dateaxisgap$11297]}, {0.5, 
             ((-System`TradingChartDump`$aspectratio$11297 100/4 - 
               System`TradingChartDump`$subplotgap$11297) (
               System`TradingChartDump`i$ - 1) + 
             If[Head[#] === Offset, 0, -#]& )[
             System`TradingChartDump`$dateaxisgap$11297]}], {Left, Top}, {
           100, System`TradingChartDump`$aspectratio$11297 100/4}]], 
         Deploy[
          Inset[
           Graphics[
            Dynamic[{{
               Opacity[0], 
               Point[{{-0.001, 0}, {0.001, 0.01}}]}, 
              GrayLevel[0.4], 
              AbsoluteThickness[0.1], 
              System`TradingChartDump`$basestyle$11297, 
              If[
              Part[System`TradingChartDump`$defaultframestyle$11297, 1, 2] =!= 
               "GraphicsFrame", 
               Part[System`TradingChartDump`$defaultframestyle$11297, 1, 2]], 
              If[
               And[
                Not[
                 Last[System`TradingChartDump`$axes$11297]], 
                Not[
                 Part[System`TradingChartDump`$frame$11297, 1, 2]]], {}, 
               
               Charting`ScaleAxis[{
                "Line", {{0, 0} -> 
                  System`TradingChartDump`$min$11297[
                    System`TradingChartDump`i$] - 0.15 
                   Abs[System`TradingChartDump`$max$11297[
                    System`TradingChartDump`i$] - 
                    System`TradingChartDump`$min$11297[
                    System`TradingChartDump`i$]], {0, 1} -> 
                  System`TradingChartDump`$max$11297[
                    System`TradingChartDump`i$] + 
                   0.5 Abs[
                    System`TradingChartDump`$max$11297[
                    System`TradingChartDump`i$] - 
                    System`TradingChartDump`$min$11297[
                    System`TradingChartDump`i$]]}}, {
                 System`TradingChartDump`$subplotgridlines$11297[
                 System`TradingChartDump`i$]}, Charting`LabelSide -> 
                Switch[System`TradingChartDump`$axesorigin$11297, Left, Left, 
                  Blank[], Right], Charting`TickSide -> 
                Switch[System`TradingChartDump`$axesorigin$11297, Left, Left, 
                  Blank[], Right], AxesStyle -> If[
                  Part[System`TradingChartDump`$frame$11297, 1, 2], 
                  Part[System`TradingChartDump`$framestyle$11297, 1, 2], 
                  Part[System`TradingChartDump`$axesstyle$11297, 2]], 
                LabelStyle -> 
                Part[System`TradingChartDump`$tickstextstyle$11297, 2], 
                TicksStyle -> If[
                  Part[System`TradingChartDump`$frame$11297, 1, 2], 
                  Part[System`TradingChartDump`$frameticksstyle$11297, 1, 2], 
                  Part[System`TradingChartDump`$ticksstyle$11297, 2]], 
                Antialiasing -> False, Charting`TickLabels -> 
                Part[System`TradingChartDump`$frameticks$11297, 1, 2], 
                Charting`TickMarkers -> 
                Part[System`TradingChartDump`$frameticks$11297, 1, 2], 
                If[
                System`TradingChartDump`$defaultframeticksstyle$11297 =!= 
                 "GraphicsFrameTicks", DefaultTicksStyle -> 
                 Part[
                  System`TradingChartDump`$defaultframeticksstyle$11297, 1, 
                   2], DefaultTicksStyle -> 
                 System`TradingChartDump`$defaultframeticksstyle$11297], 
                If[
                System`TradingChartDump`$defaultlabelstyle$11297 =!= 
                 "GraphicsLabel", DefaultLabelStyle -> 
                 Part[System`TradingChartDump`$defaultlabelstyle$11297, 2], 
                 DefaultLabelStyle -> 
                 System`TradingChartDump`$defaultlabelstyle$11297]]]}, 
             TrackedSymbols :> {}], ImagePadding -> {{All, All}, {1, 0}}, 
            PlotRangePadding -> None, PlotRangeClipping -> False, Frame -> 
            False, Axes -> False, PlotLabel -> None], 
           Offset[{
             Switch[System`TradingChartDump`$axesorigin$11297, Left, 3, 
              Blank[], -2], 
             (If[Head[#] === Offset, -First[#], 0]& )[
             System`TradingChartDump`$dateaxisgap$11297]}, {
             Switch[System`TradingChartDump`$axesorigin$11297, Left, 0.5, 
              Alternatives[Right, Automatic, 
               Blank[]], 100.5], 
             ((-System`TradingChartDump`$aspectratio$11297 100/4 - 
               System`TradingChartDump`$subplotgap$11297) (
               System`TradingChartDump`i$ - 1) + 
             If[Head[#] === Offset, 0, -#]& )[
             System`TradingChartDump`$dateaxisgap$11297]}], 
           Switch[
           System`TradingChartDump`$axesorigin$11297, Left, {Right, Top}, 
            Blank[], {Left, Top}], {
           Automatic, System`TradingChartDump`$aspectratio$11297 100/4}]]}], {
       System`TradingChartDump`i, 
        Length[
         System`TradingChartDump`$layoutData$11297[
         "SubplotIndicatorNames"]]}], StandardForm, Graphics],
     ImageSizeCache->{{16.98400852878464, 716.9999999999999}, {
      154.7164950447157, 255.92120791463452`}},
     TrackedSymbols:>{}], 
    TagBox[
     DynamicBox[Typeset`ToBoxes[{
        Opacity[0], 
        Point[
         Offset[{0, -15}, {
          0, -System`TradingChartDump`$aspectratio$11297 100 4^(-1) Length[
             System`TradingChartDump`$layoutData$11297[
             "SubplotIndicatorNames"]]}]]}, StandardForm, Graphics],
      ImageSizeCache->{{12.214285714285715`, 15.214285714285715`}, {
       254.52356434959393`, 257.5235643495939}},
      TrackedSymbols:>{}],
     Deploy,
     DefaultBaseStyle->"Deploy"], InsetBox[
     GraphicsBox[
      DynamicBox[Typeset`ToBoxes[{
         GrayLevel[0.1], 
         AbsoluteThickness[0.5], {
          Opacity[0], 
          
          Point[{{System`TradingChartDump`$controlmin$11297 + 1, 
             System`TradingChartDump`$plotrangemin$11297 - 0.001}, {
            System`TradingChartDump`$controlmin$11297 + 1, 
             System`TradingChartDump`$plotrangemin$11297 + 0.001}}]}, 
         System`TradingChartDump`$basestyle$11297, 
         If[
         Part[System`TradingChartDump`$defaultframestyle$11297, 2, 1] =!= 
          "GraphicsFrame", 
          Part[System`TradingChartDump`$defaultframestyle$11297, 2, 1]], 
         If[
          And[
           Not[
            First[System`TradingChartDump`$axes$11297]], 
           Not[
            Part[System`TradingChartDump`$frame$11297, 2, 1]]], {}, 
          Charting`DateAxis[
           Take[
           System`TradingChartDump`$dates$11297, {1, 0} + 
            Map[IntegerPart, {
              System`TradingChartDump`$controlmin$11297, 
               System`TradingChartDump`$controlmax$11297}]], {{{
             IntegerPart[System`TradingChartDump`$controlmin$11297] + 0.5, 
              System`TradingChartDump`$plotrangemin$11297}, {
             1.5 + IntegerPart[System`TradingChartDump`$controlmin$11297], 
              System`TradingChartDump`$plotrangemin$11297}}, {0, 1}}, 
           Charting`DateScope -> System`TradingChartDump`$datescope$11297, 
           Charting`LabelSide -> Right, AxesStyle -> If[
             Part[System`TradingChartDump`$frame$11297, 2, 1], 
             Part[System`TradingChartDump`$framestyle$11297, 2, 1], 
             Part[System`TradingChartDump`$axesstyle$11297, 1]], LabelStyle -> 
           Part[System`TradingChartDump`$tickstextstyle$11297, 1], 
           Antialiasing -> False, Charting`TickLabels -> 
           Part[System`TradingChartDump`$frameticks$11297, 2, 1], 
           Charting`TickMarkers -> 
           Part[System`TradingChartDump`$frameticks$11297, 2, 1], 
           If[
           System`TradingChartDump`$defaultlabelstyle$11297 =!= 
            "GraphicsLabel", DefaultLabelStyle -> 
            Part[System`TradingChartDump`$defaultlabelstyle$11297, 1], 
            DefaultLabelStyle -> 
            System`TradingChartDump`$defaultlabelstyle$11297], 
           If[
           System`TradingChartDump`$defaultframeticksstyle$11297 =!= 
            "GraphicsFrameTicks", DefaultTicksStyle -> 
            Part[System`TradingChartDump`$defaultframeticksstyle$11297, 1], 
            DefaultTicksStyle -> 
            System`TradingChartDump`$defaultframeticksstyle$11297]]]}, 
        StandardForm, Graphics],
       ImageSizeCache->{{-0.5, 658.7750764809495}, {-18., 
        0.00947116899970979}},
       TrackedSymbols:>{}],
      Axes->False,
      Frame->False,
      ImagePadding->{{1, 0.5}, {All, All}},
      PlotLabel->None,
      PlotRangeClipping->False,
      PlotRangePadding->None], Offset[{0, 2}, {0.5, 0}], {Left, Top}, {
     100, Automatic}]},
   DynamicModuleValues:>{{
     DownValues[System`TradingChartDump`$subplotrect$11297] = {HoldPattern[
          System`TradingChartDump`$subplotrect$11297[1]] :> {}}}, {
     DownValues[System`TradingChartDump`$subplotpoint$11297] = {HoldPattern[
          System`TradingChartDump`$subplotpoint$11297[1]] :> {}}}, {
     DownValues[System`TradingChartDump`$min$11297] = {HoldPattern[
          System`TradingChartDump`$min$11297[1]] :> 5.991039*^8}}, {
     DownValues[System`TradingChartDump`$max$11297] = {HoldPattern[
          System`TradingChartDump`$max$11297[1]] :> 8.5738815*^9}}, {
     DownValues[System`TradingChartDump`$subplotvalue$11297] = {HoldPattern[
          System`TradingChartDump`$subplotvalue$11297[1, 1]] :> 
        Invisible[4.042923*^9]}}, {
     DownValues[System`TradingChartDump`$subplotgridlines$11297] = {
       HoldPattern[
          System`TradingChartDump`$subplotgridlines$11297[1]] :> {0, 
         5000000000}}}, {
     DownValues[System`TradingChartDump`$layoutData$11297] = {HoldPattern[
          System`TradingChartDump`$layoutData$11297["Adjust"]] :> 0, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "AllValues"]] :> CompressedData["
1:eJw9UgdMFGYUZiXIgXiLY9zmNsgJBbkgox8QT6DYFowyCmGEa6FAwWBBURAc
5ZRocVER0ZZNGCIjKAKxgKhshJZhKwVaKjQVOcsQrPauEF/y5+W9fP/3fe//
HzcywV+ho6WltVt9NLlO+lWRti8fnu/0TK2bxajXD87k5vNxonxdq5gmRtdZ
C9+OcCGWiOdecIRWuLK4YC914YM413RLd1SC1Umf5DgHHubSZmIHqiTojsvx
lqfzcN2+sEGmFKFzy9RQ1206XtvN1gioIgxGtLVorbORv/9mZfVhAbo7PKpj
znNRMa5bfT9D7aM65tlBHxbi3Gq2mlwSbOpR4ff9J797ky3RFBpdM6ykQCkt
T8gbZkFwq9+Ok0+Fwnw60PQ7JgZasz4672yGrs7ZmYlaDrbf/ONIYgoTO7LP
9D38iQOycnTJcJmJ2BFPh+YkHgzlgq91dnGR3ZEX1sflv8cdbwmo9r3DQ2j8
g7d199h4Pl61FvI3F34r2l7xlhwcI2QsGlnw0N9+I3k11hIPXHPdDrnzoZ6W
FBthiVLR9sWMaR4aZavtUWuW8JWdcQ8vEeKxi0pfly2Aobuxz1UDEeqPqmo/
jRWilKA2clECpTyF6HxSAFOF4yP+PgnOhRamxmYIwdM8dK8EwWPDxsfjJdD3
qMswaLHBcijpTYLCCrZWFZTBKClE7d+UBZy1QmhnSuTPPTboFed+FpwmgU24
TtOLUhtkq7/z5Q/W2Ok+kqYVuQPt95MWpgrVfoyCfp0/IoWq8Ytcvaui9/ze
0T13qSI+xu59+KxyWQLHoCJWoR0ViXnDCjuuGAX/tC02iogwsI9/123FQhft
BONyDhXrz0euDExz0W/uN0E/xgG7oFkV5CbC2NanNMUBAaIuXqivLRNjsD5o
6e48F+X+6s3TlqB/8pSHXgsT8jD3a7ejhXjFfpIQJuOiUqhs3lYrQMrT07O7
9jKR1nNdmu3Ex9CFkLeewSwQUx0r3QJ4yDlJ/nziBgttxXbBe5a4cPei2WY6
m2BS1rbcq+LA02moxmOeiqxfjGS/vbLAjwzX9AR7GsgrgWuDCjoYL19HnLIl
4V9bj8MNi6ZwkDK2PI4kguTo0upPs8BoTHGJikbb2Hdfc4xlJskv00zge3D/
eMppOpzf7AwqaqNgTj2+KsQUroTRokRXCqoYwVHOYWZYS/+y5RDFDAMr+2ZK
6HT8uV6x+KTPDMvikG/bl+gY3htJDHSi42NNamDD/v9gQMNCGGWjr1cT5hv9
ehZ8jHSss2im0KAfJTNwLU8TZrhkpnfAuJqxweNA3qht6PCaSqXWPCRt4kxw
lFqzZyqVAJu6goUyOXlTz2DDdysZEo0tMQGa23VMEtin//K7w9oGc03jA+qm
DmXTvwn+A/5SyAk=
         "], HoldPattern[
          System`TradingChartDump`$layoutData$11297["AppendedAdjust"]] :> 
        7.9747776*^8, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "AppendedBox"]] :> {-5.9711274*^8, 9.77009814*^9}, HoldPattern[
          System`TradingChartDump`$layoutData$11297["AppendedMin"]] :> 
        2.0036502*^8, HoldPattern[
          System`TradingChartDump`$layoutData$11297["AppendedRatio"]] :> 1., 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["AppendedShift"]] :> 0, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["ChartStyle"]] :> {
          RGBColor[0.368417, 0.506779, 0.709798], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          RGBColor[1, 0.75, 0], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          RGBColor[0.571589, 0.586483, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["Counter"]] :> 0, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["DataMax"]] :> 15.69141, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["DataMin"]] :> 3.15, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "GridLinesPosition"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "MainChartAllValues"]] :> CompressedData["
1:eJw9kwlME1YYx8uRIIfYllKO3vQGqTAQghz7AxGB1W1glGMQjtANVhgYHCgK
gsdAiQ4vJiK6cRMoIkdQBOIAUbkRNg43GbAxYZnYOg7B6dpB/Cdf3st73/e+
vPf/PU50YqBMm0AgaGK3OuolX5VoSXlo0AvN4hTy0H3WUtoZKcAV5aKDxI2H
1Sn/lHhHLnri8/x8Mrjo2jI93H2bhqGo9lbCOgs9nV6KuPMceCvinh30Z27W
UdAcHls7kmMC/q0Be3YhBYNt2R+ddzXH9pt/HElKZYCcM7ZkuMyAoQ//a+1d
HOzIPdP/8Cc2whMevK2/x0LAipZvghUbAx03UlblVlB3JcmjrNDkvNoRs2aF
x24qPR0WHw1HVXWfygXI8Uklup7k41x4cZo8U4DQ8RHj4wliLIeT3iTKrCHs
+KYi6Kw1+kT5n4Wmi5GrvubLH2zQcT95cbqYD1XTF/m6V4Xwi+29SxHy4BRS
wiy2p6Don3Zlk5CIbuoJ+uU8CgYsAiZpx9gY3/qUKjvAx1BDyNLdBQ4Gpk55
6bYy8Ir1JDHCmYPUp6fndu1lYPhC2FvvUCbyTpI/n7zBhKcv1S7L1RTeLsO1
XgsU/Eh3z0h0oIL+8nXUKTsSHCX0LY+jiRiLKy1TUakYz0r2uUw1heubnSEl
7SZwNxgrSXI3wVrGl62HTMzx53qV8km/OUb2RhODXWhw+F909PdpZAF/I22b
bKoZrhVoZI6PNWmOZPhOp1FqH5JwlFK7ZzrNYLNOH+KwbzuWRAZgnf4r4A5z
Gy6Z6x4wVpjA+52umU2LCCcq1wmlVBGWiOdesAXWIM4339IZE2M+fVY+WCPG
dYfiRuccIV7bz9XyKUIU7r9ZrTjMR9WEjuJ+Jg/xHrVbTS/xEfD9J7/7ka2Q
I6lMLBhhQmYxE2z2HQPdXXOzk3Xs9zzIR70dW5K5yO0siOjn8HC8NUghvcPF
84matbC/OThmkKk0suTigXu+xyFPHsqF25WZM1xInc94RpYJYOhp7H9VX4hy
AzVoF8Uwkzk94u0Tg6sBu08MPa/6TP1WW9hZV5kMxUgQ3pUa/XOvLWwjtZtf
lNtip+doOiF6BwyNQn5dOCJ5nz9+78Nn1ctiJBWMyOw5Iug7JLzrsWZi/fno
lcEZDlhFLaoQDyFiLl5oqKsQoTJQ/cO0xPCJ8Lx2O1aAakFOy7Y6PtJ7r0ty
XXggpjlVewRx0V5qH7pniYMp5/blPhUb2b8YOf/2yhLkleC1IRkN/9p5HW5U
moHk5NYWSLXceHepBaQH90+knqZhXt1eFWaGGnpojGuEOQZX9s2W0WhYFmmM
pW3438iChiKDMdaG7w1MaFYfpdA3/d4cbWmb3JjCtr5oscKHvMFfGxma3XoG
CRaayQeUzfNN8R+/csgJ
         "], HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "MainChartPoints"]] :> CompressedData["
1:eJxdkmlIlGEUhcdhKmlEc8l1cJtx33LcckmP4zauowaW0aqmYmaupZD6mVqB
Wqa5EIYbGJlmhKhhiVkmZpSCCJWWCiIattmCWdGA9/3TB++P5zvvcu+5xyzh
TOxJAY/HC1IuFVp8Hvs++0X13qn+KrYC/YD2Ts1M1VFLYlX8rhTukLXZEO9C
j+y5orOQ7dfBqS82vGf7LYj1kT91oDpZjZ0XwatmoljuZ0ZsimFfr7ylRDGx
OQTLldZrNxlLUBm2KnC9ZkpsCZNv6XGFUbuJrXFpVs1jft2Q2Bb1ARXpy0b6
xPaomC+2e51lQuyILFOJsJFnTLwHJzrWjsXHs/eckS+UWBf5mBNLsaGx0t9T
y+p1QYYr1w8pq8cVIouel86TbL/bf/e543S3k9abEcYe0HpUmfCgnPmxF31D
8tSJDcaeuJjddqR82prYC00ubb0el5m/3pgvkwlE95n/PnCZ5V5piB2I90F+
6+75+kt2xL748fHqz043e2I/OIpUx/m6jAGhWvzcaoHjFnPAaJdegKeKLen+
qOsXN+mqUT2cP0aGcz4ttLH5yuAazp+ejjUiXYY5yfaSukQ2nwDoRqZYlbaT
f1wAZGZ89dZO1m8grqc1Xxl7Qf1xgbiwONY4GCwhPQhPBg8/Pccnf7kgjLRX
iWekzM9gpAyoNJvE0Ty4YBjqqZclLbD5hMA292hiQyrTQ5DcIv1b2GFAuhyZ
Ft7ufGfKCydHkvFGacmYHumhaK/xUokso364UGREKA4uLjA9DI+7Bws6xXQf
F4apbd8dcm6w/sOh+27JfMhFh/RwrFg6q3aJWD4j0GLopLSM8stFYPzsULNh
D/nJi0T5h5gB43LKKxcJZbo3b2ex/EZt5X2T+R+FUdN72amaItIVyKvVF8Sp
s/oUOL40af52Q4v0aCiLOZTkTYxoTLQG9a3/Uaf90fB+r6hqyBBu8XA0fhWl
Pcyt1aDzMVCCvmBGm87HwED5moNUB/8AwvcH7w==
         "], HoldPattern[
          System`TradingChartDump`$layoutData$11297["NewOverlay"]] :> {}, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["NewSubplot"]] :> {
          FinancialIndicator["Volume", "LineStyle" -> {
             RGBColor[0.4947336, 0.6054231999999999, 0.7678384], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             RGBColor[1, 0.75, 0], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             RGBColor[0.571589, 0.586483, 0.], 
             RGBColor[0.915, 0.3325, 0.2125], 
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}]}, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicator"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297["OverlayIndicatorCount"]] :> 
        0, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorLegends"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorNames"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorOptions"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorParameters"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorPoints"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "OverlayIndicatorValues"]] :> {}, HoldPattern[
          System`TradingChartDump`$layoutData$11297["OverPara"]] :> {}, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297["PlotRangeMin"]] :> 
        2.0036502*^8, HoldPattern[
          System`TradingChartDump`$layoutData$11297["ScalingFunctions"]] :> {
         Identity, Identity}, HoldPattern[
          System`TradingChartDump`$layoutData$11297["Space"]] :> 
        1.5691410000000001`, HoldPattern[
          System`TradingChartDump`$layoutData$11297["Style"]] :> {
          RGBColor[0.368417, 0.506779, 0.709798], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          RGBColor[1, 0.75, 0], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          RGBColor[0.571589, 0.586483, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicator"]] :> {{{{{}, {Antialiasing -> False, 
              GrayLevel[0.5], {
               Line[{{0.5, 0}, {69.5, 0}}]}}, {{
               RGBColor[0.4947336, 0.6054231999999999, 0.7678384], 
               Polygon[CompressedData["
1:eJxt1mtozXEcx/GZ8YCWXOYyYXO/zNzvw89mGLuYy/KXNHJJDaekFPJ/ICkk
t9hcoviR5lIr4dHfE6Jt0ebBb0VWGLYdx86ZbC4z/6P9Pvv2+dX/wavzbp/+
57JzkjfvXrW1a0xMTGb7Fdd+xbZf2/zzcWHM/1NR/u9EmNedOvFiEfS+p/nn
Z0cffTxWEVeW1zzB3ndJ8b/TTfQ9mDeWbnuKPTi+o4/+/d7MiQd3VWDvO3p/
fUSfwNz4I+8l9uD+oh/EXBnJr8AenCj6IczKm/Aae/DQjj56f0nMhSVTarD3
HX1+k0U/nLlf3cU32INHiH4k89lb795iDx4l+tHMmzIK32MPHiP6scy9Up91
6sHjRD+eOTwz5wP24AmiTyF2i073xx49UfSpzHF3h3XqwZM6ev/1zZ7MnLAv
8BF73/7bq0z2U4jdgvVJn6BHy34qsVtzemod9GjZTyN24xKr30OPlv105llX
CxqxB8t+BrF3r1sgBD1a9jOZH6TpeuzBsp9F7AXX9QxBj5b9bOa8O38asQfL
fg6xGrC2NAQ9WvZzmTesuVCPPVj285hHNN1owB4s+zRi93jbzSD0aNnPJ/b2
FhSGoUfLfgGxSloQiECPlv1CYnVx9vkw9Gjb+x/v0YpYBR7VNEMftf//xRG9
pm46WRHB3trIvUXMvYLVn7G3dkSvqa88nNeIvbWRe+nE6mbW9wj0YEf0mjp1
545OvbWRexnMxy+fC2Nv7YheUxcGun/B3trIvcXMj17F12Fv7YheU3tVBV+x
tzZyL5PY+5KwoQ16sCN6TT0w7kEL9tZG7i0hVrmHtzRDD3ZEr6m3l5eFsbc2
cm8psftbx7ZCD3ZEr5m95/dDbdCDjdxbRqy2Z3UJQw92RK+ZvaL92c3Qg43c
yyJWTzOKf0EPdkSvqRd3WduKvbWRe8uJ3aD7pgV6sCN6zaxy+45rgh5s5N4K
Ym9PuolAD3ZEr6kz95gw9tZG7mUTuyVjL32HHuyIXjO7R1clf4UebOReDnPD
nBOdemtH9Jr6VtH1IPbWRu7lErv1tytboQc7otfM6vXjyy3Qg43cyyNW3+KH
N0EPdkSvqY8Mqm3F3trY3v9+77uSufZAzg/sffu/L1JEv5pZbdl0pw16cJHo
zzB7+XPrfkEPLhV9FbNKOzYjDD24Qd5vPrEaP/haCHpwiuhXUx/KGBbE3vdf
dhNGIQ==
                "]]}}}}}}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorGridLines"]] :> {{0, 5000000000}}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorLegends"]] :> {{
           Deploy[
            Row[{
              Row[{
                Style["\[FilledSquare]", FontSize -> 16, 
                 RGBColor[0.4947336, 0.6054231999999999, 0.7678384]]}, 
               BaselinePosition -> (Scaled[0.35] -> Baseline)], " ", "V"}]]}},
         HoldPattern[
          System`TradingChartDump`$layoutData$11297["SubplotIndicatorNames"]] :> {
          FinancialIndicator["Volume", "LineStyle" -> {
             RGBColor[0.4947336, 0.6054231999999999, 0.7678384], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             RGBColor[1, 0.75, 0], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             RGBColor[0.571589, 0.586483, 0.], 
             RGBColor[0.915, 0.3325, 0.2125], 
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}]}, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorOptions"]] :> {{}}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorParameters"]] :> {{{}}}, HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorPoints"]] :> CompressedData["
1:eJw10m9IU1EYBvAzWRGEFKRlFjgtwiwkLf8vvTpXzZym5JCQmGFJsGogQVDR
/RARpERSVJpRUCqhFQSSfbp9MQqVIv3gwEioVv5Za5pYVLbn+ryDu/Hbc973
vOdsyUdOVR+1KqUs0cfJzxglr3BR9K32WsubYn6hRZ/hwcBLegV8uOfYAL0a
Tjx/coiOg2cWKt/SCWb9XJXkG2HN2DZK22BvW0aAToHjgu3j9Gb4evfHD/QW
uN7h/USnwqvSX4nT4Nls92d6e9S6r3WtOB259XGSeAccf8b/hc7Aes8h21c6
Ew60ZgbpnbA1cUT224X6nHueGTorauPJMn+YzkbeZ++conOQh2pXSp6LvLL3
n9TnRa2tq+mRPB953cFbUl8Ab4o8nKbtmKd5sStE70b/0x7vLF2IfrZC/xxd
BLfn3pRcg/39gZ9L1mEVuTok64vN+w2NfGNu+u7zApm3BPVdrnmu12GVfuK4
1Dvg5o4b3E837fUvn2ReCve/i+X96qaN957vzJ04z2R83SJzWCVY+34x34P9
Ky42yPywahx8Jufbi/v52xnzmzlsvH4aZj+1D/WNLovMBxu+s+Xsp1zIBxy3
/zCHVamlhv1UGfqH9HHOo5eZ86zZGmG+H/2aSsbkfmDlbBqT+cpR35Z6Z565
6cvVyXJ+N9ZP57XQuulu3wP5vSuwfurRsJwP1kZfdMj9VMI/YlM4jw6rS+sn
ZP4D8MQ598KSNVhrqO+V+4aNqvwgz2+Yuf1KlsxfBadtuM//qwarC46kUPF/
6qPxLg==
         "], HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotIndicatorValues"]] :> CompressedData["
1:eJxTTMoPSmVmYGBgBGJXKA0EERN7TzkC6XNnbh0E0XFr0o6BaKnavLMg+u0P
/wtg+S+BYL7DAe2rIDphluEtEC3yfPZdED1lxYN7IDrROeEJiObXOw6mP5v5
PgXSDTmTxEA0A8s6eTAtWlHwDCQeFqXwAkTfmmT0HESzSF0B6zNfEPYWSB9Y
z1rwAcTfZrPsNYj/LoIbzPdf+w8k7yAeugbMjwmZAZJnUP609A3InJ7/y9+B
1JeGJXwGqVOwK/gComdbTAfzC3be+gpS/6n/7Bewe99deQmi5+2wBpu73PMb
WFwvNxNM98yd+hns7wK2VyB650VekHsZDlwOew+y55VozH8QX4Jl20+Qfr+W
FLD56Wc2g/Q1/F3G9Auk7uSGDyB1DumejCDxAznVPiB1DsecZ/4BqXdhDAWp
a3jXcBdijrDmJ5C6YqebYHe4Ft8EmzdLY843EN0RpAiyn+GNZS+YXpGzBOTv
hterzoHMcbi6ay7YnI+8SiBzGNokH4LEGR7W+P4AiackrgW550Cg1XOQ/Q42
3abg8NGSXggO13pn+XeOAGDUxVo=
         "], HoldPattern[
          System`TradingChartDump`$layoutData$11297["SubplotState"]] :> {
         True}, HoldPattern[
          System`TradingChartDump`$layoutData$11297["XPosition"]] :> {1, 2, 3,
          4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
         22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 
         39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
         56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69}, HoldPattern[
          System`TradingChartDump`$layoutData$11297["YRange"]] :> 15.69141, 
        HoldPattern[
          System`TradingChartDump`$layoutData$11297[
          "SubplotPoints", {1}]] :> CompressedData["
1:eJxTTMoPSmViYGBwBWJGBjCImNh7yhFInztz6yCIjluTdgxES9XmnQXRb3/4
XwDLfwkE8x0OaF8F0QmzDG+BaJHns++C6CkrHtwD0YnOCU9ANL/ecTD92cz3
KZBuyJkkBqIZWNbJg2nRioJnIPGwKIUXIPrWJKPnIJpF6gpYn/mCsLdA+sB6
1oIPIP42m2WvQfx3Edxgvv/afyB5B/HQNWB+TMgMkDyD8qelb0Dm9Pxf/g6k
vjQs4TNInYJdwRcQPdtiOphfsPPWV5D6T/1nv4Dd++7KSxA9b4c12Nzlnt/A
4nq5mWC6Z+7Uz2B/F7C9AtE7L/KC3Mtw4HLYe5A9r0Rj/oP4EizbfoL0+7Wk
gM1PP7MZpK/h7zKmXyB1Jzd8AKlzSPdkBIkfyKn2AalzOOY88w9IvQtjKEhd
w7uGuxBzhDU/gdQVO90Eu8O1+CbYvFkac76B6I4gRZD9DG8se8H0ipwlIH83
vF51DmSOw9Vdc8HmfORVApnD0Cb5ECTO8LDG9wdIPCVxLcg9BwKtnoPsd7Dp
NgWHj5b0QnC41jvLv3MEAFW4xVg=
         "], HoldPattern[
          System`TradingChartDump`$layoutData$11297[
           Pattern[Charting`s$, 
            Blank[]], {
            Pattern[System`InteractiveTradingChartDump`p$, 
             Blank[]]}]] :> Part[
          System`TradingChartDump`$layoutData$11297[Charting`s$], 
          System`InteractiveTradingChartDump`p$], HoldPattern[
          System`TradingChartDump`$layoutData$11297[
           Pattern[Charting`s$, 
            Blank[]], {
             Pattern[System`InteractiveTradingChartDump`p$, 
              Blank[]]} -> Pattern[System`InteractiveTradingChartDump`val$, 
             Blank[]]]] :> (
         System`TradingChartDump`$layoutData$11297[Charting`s$] = ReplacePart[
           System`TradingChartDump`$layoutData$11297[Charting`s$], 
           System`InteractiveTradingChartDump`p$ -> 
           System`InteractiveTradingChartDump`val$])}}},
   Initialization:>{
    System`TradingChartDump`$indicatorpos$11297 = 
      System`TradingChartDump`$length$11297; 
     System`TradingChartDump`$layoutData$11297["ChartStyle"] = 
      System`TradingChartDump`$markerstyle$11297; 
     System`TradingChartDump`$modelData$11297["Data"] = 
      System`TradingChartDump`$data$11297; 
     System`TradingChartDump`$modelData$11297["Indicators"] = 
      System`TradingChartDump`$indicators$11297; 
     System`TradingChartDump`$modelData$11297["IndicatorStyle"] = 
      System`TradingChartDump`$indicatorstyle$11297; 
     System`TradingChartDump`$layoutData$11297["SubplotIndicatorNames"] = {}; 
     System`TradingChartDump`$layoutData$11297["OverlayIndicatorNames"] = {}; 
     System`TradingChartDump`$layoutData$11297["ScalingFunctions"] = {
       System`TradingChartDump`$sy$11297, System`TradingChartDump`$isy$11297}; 
     System`TradingChartDump`$layoutData$11297["SubplotIndicator"] = {}; 
     System`TradingChartDump`$layoutData$11297["SubplotIndicatorPoints"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "SubplotIndicatorGridLines"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "SubplotIndicatorLegends"] = {}; 
     System`TradingChartDump`$layoutData$11297["SubplotIndicatorValues"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "SubplotIndicatorParameters"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "SubplotIndicatorOptions"] = {}; 
     System`TradingChartDump`$layoutData$11297["OverlayIndicator"] = {}; 
     System`TradingChartDump`$layoutData$11297["OverlayIndicatorPoints"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "OverlayIndicatorLegends"] = {}; 
     System`TradingChartDump`$layoutData$11297["OverlayIndicatorValues"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "OverlayIndicatorParameters"] = {}; 
     System`TradingChartDump`$layoutData$11297[
       "OverlayIndicatorOptions"] = {}; 
     System`TradingChartDump`$layoutData$11297["OverPara"] = {}; 
     System`TradingChartDump`$layoutData$11297["OverlayIndicatorCount"] = 0; 
     Charting`FinancialIndicatorList[
      System`TradingChartDump`$modelData$11297, 
       System`TradingChartDump`$layoutData$11297, 
       System`TradingChartDump`$indicators$11297]; 
     Charting`TradingChartIndicator[
      System`TradingChartDump`$modelData$11297, 
       System`TradingChartDump`$layoutData$11297, "Candlestick"]; ReplaceAll[
       If[
       System`TradingChartDump`$layoutData$11297[
         "OverlayIndicatorNames"] =!= {}, 
        System`TradingChartDump`$layoutData$11297["AllValues"] = ReplaceAll[
          Transpose[
           Join[
            System`TradingChartDump`$layoutData$11297["MainChartAllValues"], 
            System`TradingChartDump`$layoutData$11297[
            "OverlayIndicatorValues"]]], "" -> {}], 
        System`TradingChartDump`$layoutData$11297["AllValues"] = Transpose[
          System`TradingChartDump`$layoutData$11297["MainChartAllValues"]]], 
       "" -> {}]; 
     System`TradingChartDump`$plotrangemin$11297 = (Min[#] - 
       0.05 (Max[#] - Min[#])& )[
        Take[
         System`TradingChartDump`$layoutData$11297["AllValues"], {1, 0} + 
         Map[IntegerPart, {
           System`TradingChartDump`$controlmin$11297, 
            System`TradingChartDump`$controlmax$11297}]]]; 
     System`TradingChartDump`$plotrangemax$11297 = (Max[#] + 
       0.1 (Max[#] - Min[#])& )[
        Take[
         System`TradingChartDump`$layoutData$11297["AllValues"], {1, 0} + 
         Map[IntegerPart, {
           System`TradingChartDump`$controlmin$11297, 
            System`TradingChartDump`$controlmax$11297}]]]; {
       System`TradingChartDump`$plotrangemin$11297, 
        System`TradingChartDump`$plotrangemax$11297} = ReplaceAll[
        System`TradingChartDump`$sy$11297[{
         System`TradingChartDump`$plotrangemin$11297, 
          System`TradingChartDump`$plotrangemax$11297}], Alternatives[
          Blank[Complex], Infinity, -Infinity] -> 
        System`TradingChartDump`$sy$11297[
           Min[System`TradingChartDump`$lows$11297]] - 0.1]; 
     If[System`TradingChartDump`$plotrangemin$11297 == 
       System`TradingChartDump`$plotrangemax$11297, {
        System`TradingChartDump`$plotrangemin$11297, 
         System`TradingChartDump`$plotrangemax$11297} = {
        System`TradingChartDump`$plotrangemin$11297 - 0.5 
         Abs[System`TradingChartDump`$plotrangemin$11297], 
         System`TradingChartDump`$plotrangemax$11297 + 
         0.5 Abs[System`TradingChartDump`$plotrangemax$11297]}]; 
     System`TradingChartDump`$newgridlines$11297 = {{}, {}}; 
     If[System`TradingChartDump`$gridlinesflag$11297, 
       Part[System`TradingChartDump`$newgridlines$11297, 1] = Switch[
          Part[System`TradingChartDump`$gridlines$11297, 1], Automatic, {
           First[System`TradingChartDump`$gridlinesscope$11297], {"Year", 
            Directive[
             Opacity[0.4], 
             Dashing[{}]]}}, 
          Blank[], 
          Part[System`TradingChartDump`$gridlines$11297, 1]]; 
       Part[System`TradingChartDump`$newgridlines$11297, 1] = If[
          And[
          Part[System`TradingChartDump`$newgridlines$11297, 1] =!= None, 
           System`TradingChartDump`$length$11297 > 0], 
          DeleteCases[
           Charting`gridlinesFinder[System`TradingChartDump`$dates$11297, 
            Part[System`TradingChartDump`$newgridlines$11297, 1]], {}], 
          Part[System`TradingChartDump`$newgridlines$11297, 1]]; 
       System`TradingChartDump`$subpricegridlines$11297 = 
        Part[System`TradingChartDump`$gridlines$11297, 2]; 
       Part[System`TradingChartDump`$newgridlines$11297, 2] = 
        If[System`TradingChartDump`$sy$11297 === Identity, 
          
          With[{System`TradingChartDump`minbox$ = 
            System`TradingChartDump`$plotrangemin$11297}, 
           Switch[
            Part[System`TradingChartDump`$gridlines$11297, 2], Automatic, 
            FindDivisions[{System`TradingChartDump`minbox$, #2}, 6]& , 
            Blank[], 
            Part[System`TradingChartDump`$gridlines$11297, 2]]], 
          
          With[{System`TradingChartDump`scy$ = 
            System`TradingChartDump`$sy$11297, System`TradingChartDump`iscy$ = 
            System`TradingChartDump`$isy$11297, 
            System`TradingChartDump`minbox$ = 
            System`TradingChartDump`$plotrangemin$11297}, 
           Switch[
            Part[System`TradingChartDump`$gridlines$11297, 2], Automatic, 
            Map[System`TradingChartDump`scy$, DeleteCases[
              FindDivisions[{
                System`TradingChartDump`iscy$[
                System`TradingChartDump`minbox$], 
                Max[
                 System`TradingChartDump`iscy$[#], 
                 System`TradingChartDump`iscy$[#2]]}, 6], 0]& ], 
            Blank[], 
            Part[System`TradingChartDump`$gridlines$11297, 2]]]]; Null]; 
     System`TradingChartDump`$ndigits$11297 = Last[
         RealDigits[System`TradingChartDump`$maxohlc$11297]] + 2; Null},
   UnsavedVariables:>{
    Charting`FinancialIndicatorList, Charting`TradingChartIndicator}],
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->{None, None},
  Background->None,
  Epilog->{},
  Frame->False,
  FrameLabel->{None, None},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{718., Automatic},
  LabelStyle->{
    GrayLevel[0.4], FontFamily -> "Arial"},
  PlotRange->All,
  PlotRangeClipping->False,
  Prolog->{}]], "Output",
 CellChangeTimes->{3.697198871070695*^9, 3.6971989811876945`*^9, 
  3.6971990538826947`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6971986553576946`*^9, 3.697198663660695*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddata", "=", 
  RowBox[{"depureData", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.6795828713733616`*^9, 3.679582879483267*^9}, {
  3.6797512369030714`*^9, 3.6797512465455914`*^9}, {3.6797513148606157`*^9, 
  3.67975131758103*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.49`", ",", "9.51`", ",", "9.28`", ",", "9.29`", ",", "8.11727`*^6"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.49`", ",", "9.61`", ",", "9.45`", ",", "9.52`", ",", 
       "2.7366988`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.4`", ",", "9.5`", ",", "9.32`", ",", "9.41`", ",", "1.8393449`*^7"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.48`", ",", "9.51`", ",", "9.3`", ",", "9.38`", ",", 
       "1.5248228`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.41`", ",", "9.52`", ",", "9.4`", ",", "9.45`", ",", 
       "2.4961717`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.18`", ",", "9.44`", ",", "9.13`", ",", "9.42`", ",", 
       "3.2944941`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.1`", ",", "9.25`", ",", "9.08`", ",", "9.2`", ",", "2.2092388`*^7"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8.99`", ",", "9.2`", ",", "8.94`", ",", "9.14`", ",", 
       "4.6347911`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8.95`", ",", "8.98`", ",", "8.86`", ",", "8.92`", ",", 
       "1.3881668`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8.94`", ",", "8.99`", ",", "8.88`", ",", "8.97`", ",", 
       "2.2966311`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.11`", ",", "9.13`", ",", "8.96`", ",", "9.`", ",", "2.0671918`*^7"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.08`", ",", "9.15`", ",", "8.91`", ",", "8.99`", ",", 
       "2.2118944`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.1`", ",", "9.17`", ",", "8.97`", ",", "9.11`", ",", 
       "1.9952031`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.12`", ",", "9.2`", ",", "8.98`", ",", "9.04`", ",", 
       "2.4544179`*^7"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6795828843519974`*^9, 3.6795835089173565`*^9, 3.6795836050583053`*^9, 
   3.679583730368656*^9, 3.6795837756384583`*^9, {3.6797512431091194`*^9, 
   3.6797512472458105`*^9}, 3.6797513194197903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"weekdata", "=", 
  RowBox[{"WeekPrices", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.618836775392728*^9, 3.618836783379942*^9}, {
   3.6188416494592896`*^9, 3.6188416833581486`*^9}, {3.618841715581005*^9, 
   3.61884171837341*^9}, {3.618843198378009*^9, 3.6188432191884456`*^9}, {
   3.61884326157372*^9, 3.618843264584525*^9}, 3.6188466874729376`*^9, {
   3.6189025412706213`*^9, 3.61890255436837*^9}, {3.6189174995597196`*^9, 
   3.6189175073441334`*^9}, 3.618932958183634*^9, {3.6797554996950707`*^9, 
   3.679755506942671*^9}, {3.6797557075569167`*^9, 3.679755710196618*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.48`", ",", "9.61`", ",", "9.28`", ",", "9.29`", ",", 
       "6.9125935`*^7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8.95`", ",", "9.52`", ",", "8.86`", ",", "9.45`", ",", 
       "1.40228625`*^8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.1`", ",", "9.19`", ",", "8.88`", ",", "8.97`", ",", 
       "1.04174171`*^8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.12`", ",", "9.2`", ",", "8.98`", ",", "9.04`", ",", 
       "2.4544179`*^7"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.618917502414525*^9, 3.6189175084361353`*^9}, 
   3.618933073670637*^9, 3.618933540751057*^9, 3.6190067584774537`*^9, 
   3.6795710351437054`*^9, 3.6795840186381016`*^9, 3.6797512765801134`*^9, 
   3.679755511935248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P1", "=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FDOpen", "[", "data", "]"}], ",", 
      RowBox[{"FDClose", "[", "data", "]"}], ",", 
      RowBox[{"FDHigh", "[", "data", "]"}], ",", 
      RowBox[{"FDLow", "[", "data", "]"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Open\>\"", ",", "\"\<Close\>\"", ",", "\"\<High\>\"", ",", 
       "\"\<Low\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6189318799721403`*^9, 3.6189318888485556`*^9}, {
   3.6189320307152047`*^9, 3.618932048374436*^9}, {3.61893288756231*^9, 
   3.6189329154863586`*^9}, 3.6189329643144445`*^9, {3.6189335471158686`*^9, 
   3.618933580655927*^9}, {3.618933683553708*^9, 3.618933707094149*^9}, {
   3.6189338420343866`*^9, 3.6189338480247965`*^9}, {3.618933878881651*^9, 
   3.6189339207833247`*^9}, {3.618934104941648*^9, 3.6189341091692553`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.12}, {3.6142848*^9, 9.1}, {3.6143712*^9, 
         9.08}, {3.6144576*^9, 9.2}, {3.614544*^9, 9.11}, {3.6146304*^9, 
         8.94}, {3.6148896*^9, 8.95}, {3.614976*^9, 8.99}, {3.6150624*^9, 
         9.1}, {3.6151488*^9, 9.18}, {3.6152352*^9, 9.41}, {3.6154944*^9, 
         9.48}, {3.6155808*^9, 9.4}, {3.6156672*^9, 9.49}, {3.6157536*^9, 
         9.49}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.04}, {3.6142848*^9, 9.11}, {3.6143712*^9, 
         8.99}, {3.6144576*^9, 9.14}, {3.614544*^9, 9.}, {3.6146304*^9, 
         8.97}, {3.6148896*^9, 8.92}, {3.614976*^9, 9.14}, {3.6150624*^9, 
         9.2}, {3.6151488*^9, 9.42}, {3.6152352*^9, 9.45}, {3.6154944*^9, 
         9.38}, {3.6155808*^9, 9.41}, {3.6156672*^9, 9.52}, {3.6157536*^9, 
         9.29}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.2}, {3.6142848*^9, 9.17}, {3.6143712*^9, 
         9.15}, {3.6144576*^9, 9.19}, {3.614544*^9, 9.13}, {3.6146304*^9, 
         8.99}, {3.6148896*^9, 8.98}, {3.614976*^9, 9.2}, {3.6150624*^9, 
         9.25}, {3.6151488*^9, 9.44}, {3.6152352*^9, 9.52}, {3.6154944*^9, 
         9.51}, {3.6155808*^9, 9.5}, {3.6156672*^9, 9.61}, {3.6157536*^9, 
         9.51}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 8.98}, {3.6142848*^9, 8.97}, {3.6143712*^9, 
         8.91}, {3.6144576*^9, 8.97}, {3.614544*^9, 8.96}, {3.6146304*^9, 
         8.88}, {3.6148896*^9, 8.86}, {3.614976*^9, 8.94}, {3.6150624*^9, 
         9.08}, {3.6151488*^9, 9.13}, {3.6152352*^9, 9.4}, {3.6154944*^9, 
         9.3}, {3.6155808*^9, 9.32}, {3.6156672*^9, 9.45}, {3.6157536*^9, 
         9.28}}]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.6140256*^9, 8.822500000000002}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {8.86, 9.61}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6140256*^9, 8.822500000000002}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {8.86, 9.61}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Open\"", "\"Close\"", "\"High\"", "\"Low\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.618931890283758*^9, {3.618932037158016*^9, 3.6189320496848383`*^9}, 
   3.6189329179667635`*^9, 3.618933122670323*^9, 3.6189335859443364`*^9, 
   3.6189337086385517`*^9, 3.6189338512540026`*^9, 3.618933922280927*^9, 
   3.6189341164700685`*^9, 3.61900676068158*^9, 3.6795710414891024`*^9, 
   3.679584024884122*^9, 3.6797512947736826`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P2", "=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FDOpen", "[", "ddata", "]"}], ",", 
      RowBox[{"FDClose", "[", "ddata", "]"}], ",", 
      RowBox[{"FDHigh", "[", "ddata", "]"}], ",", 
      RowBox[{"FDLow", "[", "ddata", "]"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Open\>\"", ",", "\"\<Close\>\"", ",", "\"\<High\>\"", ",", 
       "\"\<Low\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67975134134791*^9, 3.6797513512752028`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.12}, {3.6142848*^9, 9.1}, {3.6143712*^9, 
         9.08}, {3.614544*^9, 9.11}, {3.6146304*^9, 8.94}, {3.6148896*^9, 
         8.95}, {3.614976*^9, 8.99}, {3.6150624*^9, 9.1}, {3.6151488*^9, 
         9.18}, {3.6152352*^9, 9.41}, {3.6154944*^9, 9.48}, {3.6155808*^9, 
         9.4}, {3.6156672*^9, 9.49}, {3.6157536*^9, 9.49}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.04}, {3.6142848*^9, 9.11}, {3.6143712*^9, 
         8.99}, {3.614544*^9, 9.}, {3.6146304*^9, 8.97}, {3.6148896*^9, 
         8.92}, {3.614976*^9, 9.14}, {3.6150624*^9, 9.2}, {3.6151488*^9, 
         9.42}, {3.6152352*^9, 9.45}, {3.6154944*^9, 9.38}, {3.6155808*^9, 
         9.41}, {3.6156672*^9, 9.52}, {3.6157536*^9, 9.29}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.2}, {3.6142848*^9, 9.17}, {3.6143712*^9, 
         9.15}, {3.614544*^9, 9.13}, {3.6146304*^9, 8.99}, {3.6148896*^9, 
         8.98}, {3.614976*^9, 9.2}, {3.6150624*^9, 9.25}, {3.6151488*^9, 
         9.44}, {3.6152352*^9, 9.52}, {3.6154944*^9, 9.51}, {3.6155808*^9, 
         9.5}, {3.6156672*^9, 9.61}, {3.6157536*^9, 9.51}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 8.98}, {3.6142848*^9, 8.97}, {3.6143712*^9, 
         8.91}, {3.614544*^9, 8.96}, {3.6146304*^9, 8.88}, {3.6148896*^9, 
         8.86}, {3.614976*^9, 8.94}, {3.6150624*^9, 9.08}, {3.6151488*^9, 
         9.13}, {3.6152352*^9, 9.4}, {3.6154944*^9, 9.3}, {3.6155808*^9, 
         9.32}, {3.6156672*^9, 9.45}, {3.6157536*^9, 9.28}}]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.6140256*^9, 8.822500000000002}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {8.86, 9.61}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6140256*^9, 8.822500000000002}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {8.86, 9.61}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Open\"", "\"Close\"", "\"High\"", "\"Low\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6797513541625104`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P3", "=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"FDVolume", "[", "data", "]"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", "\"\<Volume\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618933780835479*^9, 3.6189337960299053`*^9}, {
   3.618933938255355*^9, 3.618933966304205*^9}, {3.618934112070861*^9, 
   3.618934113240863*^9}, 3.679751427128256*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 2.4544179*^7}, {3.6142848*^9, 1.9952031*^7}, {
         3.6143712*^9, 2.2118944*^7}, {3.6144576*^9, 1.8464967*^7}, {
         3.614544*^9, 2.0671918*^7}, {3.6146304*^9, 2.2966311*^7}, {
         3.6148896*^9, 1.3881668*^7}, {3.614976*^9, 4.6347911*^7}, {
         3.6150624*^9, 2.2092388*^7}, {3.6151488*^9, 3.2944941*^7}, {
         3.6152352*^9, 2.4961717*^7}, {3.6154944*^9, 1.5248228*^7}, {
         3.6155808*^9, 1.8393449*^7}, {3.6156672*^9, 2.7366988*^7}, {
         3.6157536*^9, 8.11727*^6}}]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6140256*^9, 0}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {0, 4.6347911*^7}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6140256*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {0, 4.6347911*^7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Volume\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6189337977927084`*^9, {3.6189339583013906`*^9, 3.618933967536607*^9}, 
   3.6189341192156734`*^9, 3.6190067613916206`*^9, 3.6795710580344977`*^9, 
   3.679584044688177*^9, 3.679751431248044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "kNNForecast", "]"}]], "Input",
 CellChangeTimes->{{3.6797533769896164`*^9, 3.6797533903899536`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Borsa`Private`Weighting", "\[Rule]", "Mean"}], ",", 
   RowBox[{"DistanceFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6797533917446547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kNNForecast", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FDClose", "[", "data", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "3", ",", "2", ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6797535167530155`*^9, 3.6797535277354207`*^9}, {
   3.679753569151926*^9, 3.679753653870268*^9}, {3.6797537068284874`*^9, 
   3.6797537166215916`*^9}, {3.679753796289854*^9, 3.67975382225163*^9}, 
   3.6797538526225553`*^9, {3.679755213170635*^9, 3.6797552205292916`*^9}, {
   3.679755725023485*^9, 3.6797557288000517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.29`", ",", "9.52`", ",", "9.41`", ",", "9.38`", ",", "9.45`", ",", 
   "9.42`", ",", "9.2`", ",", "9.14`", ",", "8.92`", ",", "8.97`", ",", "9.`",
    ",", "9.14`", ",", "8.99`", ",", "9.11`", ",", "9.04`", ",", 
   "9.043029414568556`", ",", "9.05767470789221`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6797536050212193`*^9, 3.6797536552573752`*^9}, {
   3.6797537105334864`*^9, 3.6797537180920725`*^9}, {3.6797537979069834`*^9, 
   3.6797538540235186`*^9}, 3.6797552230530667`*^9, 3.679755731802908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FDClose", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.619007388547492*^9, 3.619007407903599*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "31"}], "}"}], ",", "9.29`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "30"}], "}"}], ",", "9.52`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "29"}], "}"}], ",", "9.41`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "28"}], "}"}], ",", "9.38`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "25"}], "}"}], ",", "9.45`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "24"}], "}"}], ",", "9.42`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "23"}], "}"}], ",", "9.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "22"}], "}"}], ",", "9.14`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "21"}], "}"}], ",", "8.92`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "18"}], "}"}], ",", "8.97`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "17"}], "}"}], ",", "9.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "16"}], "}"}], ",", "9.14`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "15"}], "}"}], ",", "8.99`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "14"}], "}"}], ",", "9.11`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2014", ",", "7", ",", "11"}], "}"}], ",", "9.04`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6795710697251787`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EMA", "[", 
   RowBox[{"n_", ",", "prices_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"date", ",", "ema"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"date", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "prices"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ema", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"ExponentialMovingAverage", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
            RowBox[{"FDClose", "[", "prices", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"2", "/", 
          RowBox[{"(", 
           RowBox[{"n", "+", "1"}], ")"}]}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"date", ",", "ema"}], "}"}], "]"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6190068042770734`*^9, 3.6190068329057107`*^9}, {
   3.6190072379228764`*^9, 3.6190072444502497`*^9}, {3.6190072865176563`*^9, 
   3.61900733063618*^9}, {3.619007769791298*^9, 3.619007877324448*^9}, {
   3.6190080009535193`*^9, 3.6190081011512504`*^9}, {3.6190081603376355`*^9, 
   3.6190081804457855`*^9}, {3.6190085147551384`*^9, 3.619008549511999*^9}, 
   3.619009483158039*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EMA", "[", 
  RowBox[{"22", ",", "data"}], "]"}]], "Input",
 CellChangeTimes->{{3.6190073398017035`*^9, 3.6190073688753667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "31"}], "}"}], ",", 
      "9.202057571275859`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "30"}], "}"}], ",", 
      "9.19368210187356`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "29"}], "}"}], ",", 
      "9.1626042068139`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "28"}], "}"}], ",", 
      "9.139042702700939`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "25"}], "}"}], ",", 
      "9.116094388672456`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "24"}], "}"}], ",", 
      "9.084293854260311`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "23"}], "}"}], ",", 
      "9.05232184038034`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "22"}], "}"}], ",", 
      "9.038257253749897`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "21"}], "}"}], ",", 
      "9.028567468392746`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "18"}], "}"}], ",", 
      "9.038907227287293`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "17"}], "}"}], ",", 
      "9.045469820362275`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "16"}], "}"}], ",", 
      "9.049800279444396`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "15"}], "}"}], ",", 
      "9.041209829867674`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "14"}], "}"}], ",", 
      "9.046086956521737`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "7", ",", "11"}], "}"}], ",", "9.04`"}], "}"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6190073708284783`*^9, 3.619008186308121*^9, 
  3.6190085949392796`*^9, 3.6190094941092587`*^9, 3.6795711512700233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FDOpen", "[", "data", "]"}], ",", 
     RowBox[{"FDClose", "[", "data", "]"}], ",", 
     RowBox[{"EMA", "[", 
      RowBox[{"22", ",", "data"}], "]"}], ",", 
     RowBox[{"EMA", "[", 
      RowBox[{"11", ",", "data"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Open\>\"", ",", "\"\<Close\>\"", ",", "\"\<EMA22\>\"", ",", 
      "\"\<EMA11\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.619008233790837*^9, 3.619008251131829*^9}, {
  3.619008651208578*^9, 3.619008668415408*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.12}, {3.6142848*^9, 9.1}, {3.6143712*^9, 
         9.08}, {3.6144576*^9, 9.03}, {3.614544*^9, 9.11}, {3.6146304*^9, 
         8.94}, {3.6148896*^9, 8.95}, {3.614976*^9, 8.99}, {3.6150624*^9, 
         9.1}, {3.6151488*^9, 9.18}, {3.6152352*^9, 9.41}, {3.6154944*^9, 
         9.48}, {3.6155808*^9, 9.4}, {3.6156672*^9, 9.49}, {3.6157536*^9, 
         9.49}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.04}, {3.6142848*^9, 9.11}, {3.6143712*^9, 
         8.99}, {3.6144576*^9, 9.14}, {3.614544*^9, 9.}, {3.6146304*^9, 
         8.97}, {3.6148896*^9, 8.92}, {3.614976*^9, 9.14}, {3.6150624*^9, 
         9.2}, {3.6151488*^9, 9.42}, {3.6152352*^9, 9.45}, {3.6154944*^9, 
         9.38}, {3.6155808*^9, 9.41}, {3.6156672*^9, 9.52}, {3.6157536*^9, 
         9.29}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.04}, {3.6142848*^9, 9.046086956521737}, {
         3.6143712*^9, 9.041209829867674}, {3.6144576*^9, 
         9.049800279444396}, {3.614544*^9, 9.045469820362275}, {3.6146304*^9, 
         9.038907227287293}, {3.6148896*^9, 9.028567468392746}, {3.614976*^9, 
         9.038257253749897}, {3.6150624*^9, 9.05232184038034}, {3.6151488*^9, 
         9.084293854260311}, {3.6152352*^9, 9.116094388672456}, {3.6154944*^9,
          9.139042702700939}, {3.6155808*^9, 9.1626042068139}, {3.6156672*^9, 
         9.19368210187356}, {3.6157536*^9, 9.202057571275859}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.6140256*^9, 9.04}, {3.6142848*^9, 9.051666666666666}, {
         3.6143712*^9, 9.04138888888889}, {3.6144576*^9, 9.057824074074075}, {
         3.614544*^9, 9.048186728395063}, {3.6146304*^9, 9.035155606995886}, {
         3.6148896*^9, 9.015963005829905}, {3.614976*^9, 9.036635838191588}, {
         3.6150624*^9, 9.063863198492989}, {3.6151488*^9, 
         9.123219332077491}, {3.6152352*^9, 9.177682776731244}, {3.6154944*^9,
          9.211402313942703}, {3.6155808*^9, 9.244501928285587}, {
         3.6156672*^9, 9.290418273571323}, {3.6157536*^9, 
         9.290348561309436}}]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.6140256*^9, 8.89}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {8.92, 9.52}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6140256*^9, 8.89}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6140256*^9, 3.6157536*^9}, {8.92, 9.52}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Open\"", "\"Close\"", "\"EMA22\"", "\"EMA11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6190082534329605`*^9, 3.6190086020372915`*^9, 
  3.619008670240611*^9, 3.619009499194867*^9, 3.6795711666203203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InteractiveTradingChart", "[", 
  RowBox[{"Reverse", "[", "data", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6190088725105667`*^9, 3.619008886456991*^9}, {
   3.6190090945457563`*^9, 3.61900910201817*^9}, {3.619009232761999*^9, 
   3.619009249064028*^9}, 3.6190095645901823`*^9}],

Cell[BoxData[
 DynamicBox[Charting`iInteractiveTradingChart[
  InteractiveTradingChart, {{{2014, 7, 11}, {9.12, 9.2, 8.98, 9.04, 
     2.4544179*^7}}, {{2014, 7, 14}, {9.1, 9.17, 8.97, 9.11, 
     1.9952031*^7}}, {{2014, 7, 15}, {9.08, 9.15, 8.91, 8.99, 
     2.2118944*^7}}, {{2014, 7, 16}, {9.03, 9.19, 8.97, 9.14, 
     1.8464967*^7}}, {{2014, 7, 17}, {9.11, 9.13, 8.96, 9., 2.0671918*^7}}, {{
     2014, 7, 18}, {8.94, 8.99, 8.88, 8.97, 2.2966311*^7}}, {{2014, 7, 21}, {
     8.95, 8.98, 8.86, 8.92, 1.3881668*^7}}, {{2014, 7, 22}, {8.99, 9.2, 8.94,
      9.14, 4.6347911*^7}}, {{2014, 7, 23}, {9.1, 9.25, 9.08, 9.2, 
     2.2092388*^7}}, {{2014, 7, 24}, {9.18, 9.44, 9.13, 9.42, 
     3.2944941*^7}}, {{2014, 7, 25}, {9.41, 9.52, 9.4, 9.45, 
     2.4961717*^7}}, {{2014, 7, 28}, {9.48, 9.51, 9.3, 9.38, 
     1.5248228*^7}}, {{2014, 7, 29}, {9.4, 9.5, 9.32, 9.41, 1.8393449*^7}}, {{
     2014, 7, 30}, {9.49, 9.61, 9.45, 9.52, 2.7366988*^7}}, {{2014, 7, 31}, {
     9.49, 9.51, 9.28, 9.29, 8.11727*^6}}}, Automatic, Automatic],
  ImageSizeCache->{533., {262., 269.}},
  SingleEvaluation->True]], "Output",
 CellChangeTimes->{3.6190092512168317`*^9, 3.619009570798993*^9, 
  3.6795711809725485`*^9}]
}, Open  ]]
},
WindowSize->{1151, 811},
WindowMargins->{{Automatic, 345}, {Automatic, 42}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info63697201524-8430485"->{
  Cell[9667, 290, 642, 10, 92, "Print",
   CellTags->"Info63697201524-8430485"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info63697201524-8430485", 200597, 4267}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4421, 129, 172, "Input"],
Cell[CellGroupData[{
Cell[5004, 153, 128, 2, 31, "Input"],
Cell[5135, 157, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5245, 163, 121, 2, 31, "Input"],
Cell[5369, 167, 2471, 64, 101, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7877, 236, 167, 3, 31, "Input"],
Cell[8047, 241, 1462, 40, 55, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9546, 286, 118, 2, 31, "Input"],
Cell[9667, 290, 642, 10, 92, "Print",
 CellTags->"Info63697201524-8430485"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10346, 305, 127, 2, 31, "Input"],
Cell[10476, 309, 387, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10900, 321, 478, 9, 31, "Input"],
Cell[11381, 332, 2208, 50, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13626, 387, 141, 2, 31, "Input"],
Cell[13770, 391, 544, 9, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14351, 405, 237, 4, 31, "Input"],
Cell[14591, 411, 93069, 1794, 539, "Output"]
}, Open  ]],
Cell[107675, 2208, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[107794, 2213, 264, 5, 31, "Input"],
Cell[108061, 2220, 3787, 118, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111885, 2343, 613, 9, 31, "Input"],
Cell[112501, 2354, 1303, 38, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113841, 2397, 971, 20, 31, "Input"],
Cell[114815, 2419, 21623, 433, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136475, 2857, 593, 15, 31, "Input"],
Cell[137071, 2874, 21176, 424, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158284, 3303, 428, 9, 31, "Input"],
Cell[158715, 3314, 9273, 189, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168025, 3508, 140, 2, 31, "Input"],
Cell[168168, 3512, 341, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168546, 3524, 578, 12, 31, "Input"],
Cell[169127, 3538, 552, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169716, 3552, 129, 2, 31, "Input"],
Cell[169848, 3556, 2095, 76, 72, "Output"]
}, Open  ]],
Cell[171958, 3635, 1590, 41, 112, "Input"],
Cell[CellGroupData[{
Cell[173573, 3680, 153, 3, 31, "Input"],
Cell[173729, 3685, 2508, 80, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176274, 3770, 655, 17, 31, "Input"],
Cell[176932, 3789, 21790, 434, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198759, 4228, 306, 5, 31, "Input"],
Cell[199068, 4235, 1203, 19, 548, "Output"]
}, Open  ]]
}
]
*)

